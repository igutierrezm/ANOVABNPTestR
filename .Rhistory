# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like a tan().
shift_plot(fit, group = 3) # this should be a straight line.
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like a tan().
shift_plot(fit, group = 3) # this should be a straight line.
devtools::load_all(".")
setup()
# Simulate a sample
{
N <- 1000
d <- sample(c(-1, +1), 1 * N, replace = TRUE, prob = c(0.3, 0.7))
x <- sample(c(1L, 2L, 3L), N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
yvec <- (x == 2) + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat, n = 100L)
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like a tan().
shift_plot(fit, group = 3) # this should be a straight line.
# Simulate a sample
{
N <- 1000
x <- sample(c(1L, 2L), N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
yvec <-  1.2 * (x == 2L) + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat, n = 100L)
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like a tan().
# Simulate a sample
{
N <- 1000
x <- sample(c(1L, 2L), N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
yvec <-  1.2 * (x == 2L) * (2 * (rnorm(N) <= 0.7) - 1) + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat, n = 100L)
# Plot the shift function for the second cell
shift_plot(fit, group = 2)
# Simulate a sample
{
N <- 1000
d <- 2 * (rnorm(N) <= 0.7) - 1
x <- sample(0L:1L, N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
yvec <-  1.2 * (x == 2L) * d + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat, n = 100L)
# Plot the shift function for the second cell
shift_plot(fit, group = 2)
# Simulate a sample
{
N <- 1000
d <- 2 * (rnorm(N) <= 0.7) - 1
x <- sample(0L:1L, N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
yvec <-  1.2 * (x == 1L) * d + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat, n = 100L)
# Plot the shift function for the second cell
shift_plot(fit, group = 2)
# Simulate a sample
{
N <- 1000
d <- 2 * (rnorm(N) <= 0.7) - 1
x <- sample(0L:1L, N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
yvec <-  1.2 * (x == 1L) * d + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat, n = 100L)
devtools::load_all(".")
setup()
# Simulate a sample
{
N <- 1000
d <- 2 * (rnorm(N) <= 0.7) - 1
x <- sample(0L:1L, N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
yvec <-  1.2 * (x == 1L) * d + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat, n = 100L)
# Plot the shift function for the second cell
shift_plot(fit, group = 2)
devtools::load_all(".")
setup()
# Simulate a sample
{
N <- 1000
d <- 2 * (rnorm(N) <= 0.7) - 1
x <- sample(0L:1L, N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
yvec <-  1.2 * (x == 1L) * d + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat, n = 100L)
# Plot the shift function for the second cell
shift_plot(fit, group = 2)
# Simulate a sample
{
N <- 1000
d <- 2 * (rnorm(N) <= 0.7) - 1
x <- sample(0L:1L, N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
yvec1 <-  1.2 * (x == 1L) * d + rnorm(N) / 2
yvec2 <-  rnorm(N) / 2
}
# Simulate a sample
{
N <- 1000
d <- 2 * (rnorm(N) <= 0.7) - 1
x <- sample(0L:1L, N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
yvec1 <-  1.2 * (x == 1L) * d + rnorm(N) / 2
yvec2 <-  rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit1 <- anova_bnp_normal(yvec1, Xmat, n = 100L)
fit2 <- anova_bnp_normal(yvec1, Xmat, n = 100L)
# Plot the shift function for the second cell
shift_plot(fit1, group = 2)
shift_plot(fit1, group = 2)
shift_plot(fit2, group = 2)
# Simulate a sample
{
N <- 1000
d <- 2 * (rnorm(N) <= 0.7) - 1
x <- sample(0L:1L, N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
yvec1 <-  1.2 * (x == 1L) * d + rnorm(N) / 2
yvec2 <-  rnorm(N) / 2
}
fit2 <- anova_bnp_normal(yvec2, Xmat, n = 100L)
# Simulate a sample
{
set.seed(1)
N <- 1000
d <- 2 * (rnorm(N) <= 0.7) - 1
x <- sample(0L:1L, N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
yvec1 <-  1.2 * (x == 1L) * d + rnorm(N) / 2
yvec2 <-  rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit1 <- anova_bnp_normal(yvec1, Xmat, n = 100L)
fit2 <- anova_bnp_normal(yvec2, Xmat, n = 100L)
# Plot the shift function for the second cell
shift_plot(fit1, group = 2)
shift_plot(fit2, group = 2)
# Simulate a sample
{
set.seed(1)
N <- 1000
d <- 2 * (rnorm(N) <= 0.7) - 1
x <- sample(0L:2L, N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
yvec <-  1.2 * (x == 2L) * d + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat, n = 100L)
# Plot the shift function for the second cell
shift_plot(fit1, group = 2)
shift_plot(fit2, group = 3)
# Simulate a sample
{
set.seed(1)
N <- 1000
d <- 2 * (rnorm(N) <= 0.7) - 1
x <- sample(0L:2L, N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
yvec <-  1.2 * (x == 2L) * d + rnorm(N) / 2
}
x
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat, n = 100L)
# Plot the shift function for the second cell
shift_plot(fit, group = 2)
shift_plot(fit, group = 3)
# Plot the shift function for the second cell
shift_plot(fit, group = 2)
shift_plot(fit, group = 3)
devtools::load_all(".")
devtools::load_all(".")
# Plot the shift function for the second cell
shift_plot(fit, group1 = 1, group2 = 2)
shift_plot(fit, group1 = 1, group2 = 3)
# Deploy locally
devtools::document()
pkgdown::build_site()
# Deploy locally
devtools::document()
pkgdown::build_site()
# Deploy locally
devtools::document()
pkgdown::build_site()
# Deploy locally
devtools::document()
pkgdown::build_site()
# Deploy locally
devtools::document()
pkgdown::build_site()
# Deploy locally
devtools::document()
pkgdown::build_site()
# Deploy locally
devtools::document()
pkgdown::build_site()
devtools::load_all(".")
example_01[c("y")]
example_01[, c("x1", "x2")]
# Deploy locally
devtools::document()
pkgdown::build_site()
# Deploy locally
devtools::document()
# Deploy locally
devtools::document()
pkgdown::build_site()
# Deploy locally
devtools::document()
pkgdown::build_site()
# Deploy locally
devtools::document()
pkgdown::build_site()
# Deploy locally
devtools::document()
pkgdown::build_site()
# Deploy locally
devtools::document()
pkgdown::build_site()
# Deploy locally
devtools::document()
pkgdown::build_site()
# Deploy locally
devtools::document()
pkgdown::build_site()
# Deploy locally
devtools::document()
pkgdown::build_site()
# Deploy locally
devtools::document()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
document()
# Deploy locally
devtools::document()
# Deploy locally
devtools::document()
pkgdown::build_site()
# Deploy locally
devtools::document()
pkgdown::build_site()
# Deploy locally
devtools::document()
pkgdown::build_site()
# Deploy locally
devtools::document()
pkgdown::build_site()
pkgdown::build_site()
# Deploy locally
devtools::document()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
devtools::load_all(".")
pkgdown::build_site()
devtools::load_all(".")
devtools::load_all(".")
setup()
Sys.unsetenv("https_proxy")
Sys.unsetenv("http_proxy")
setup()
devtools::load_all(".")
devtools::load_all(".")
setup()
devtools::load_all(".")
setup()
# Simulate a sample
{
set.seed(1)
N <- 1000
d <- 2 * (rnorm(N) <= 0.7) - 1
x <- sample(0L:2L, N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
yvec <-  1.2 * (x == 2L) * d + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat, n = 100L)
devtools::load_all(".")
# Simulate a sample
{
set.seed(1)
N <- 1000
d <- 2 * (rnorm(N) <= 0.7) - 1
x <- sample(0L:2L, N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
yvec <-  1.2 * (x == 2L) * d + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat, n = 100L)
devtools::load_all(".")
# Simulate a sample
{
set.seed(1)
N <- 1000
d <- 2 * (rnorm(N) <= 0.7) - 1
x <- sample(0L:2L, N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
yvec <-  1.2 * (x == 2L) * d + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat, n = 100L)
# Show MCMC results for gamma
gamma_chain(fit)
devtools::load_all(".")
devtools::load_all(".")
# Show MCMC results for gamma
gamma_chain(fit)
group_codes(fit)
# Show the factors combination associated to each group
group_codes(fit)
# Simulate a sample
{
set.seed(1)
N <- 1000
lambda <- 1
alpha <- 0.5
Xmat <- matrix(1L, nrow = N, ncol = 1)
yvec <- rpois(N, lambda) + rbinom(N, 1, alpha)
}
# Fit our ANOVA BNP model
fit <- anova_bnp_berpoi(yvec, Xmat)
devtools::load_all(".")
# Simulate a sample
{
set.seed(1)
N <- 1000
d <- 2 * (rnorm(N) <= 0.7) - 1
x <- sample(0L:2L, N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
yvec <-  1.2 * (x == 2L) * d + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat, n = 100L)
# Show MCMC results for gamma
gamma_chain(fit)
# Show the factors combination associated to each group
group_codes(fit)
# Simulate a sample
{
set.seed(1)
N <- 1000
lambda <- 1
alpha <- 0.5
Xmat <- matrix(1L, nrow = N, ncol = 1)
yvec <- rpois(N, lambda) + rbinom(N, 1, alpha)
}
# Fit our ANOVA BNP model
fit <- anova_bnp_berpoi(yvec, Xmat)
# Simulate a sample
{
set.seed(1)
N <- 1000
lambda <- 1
alpha <- 0.5
Xmat <- matrix(1L, nrow = N, ncol = 1)
yvec <- rpois(N, lambda) + rbinom(N, 1, alpha)
}
devtools::load_all(".")
# Simulate a sample
{
set.seed(1)
N <- 1000
lambda <- 1
alpha <- 0.5
Xmat <- matrix(1L, nrow = N, ncol = 1)
yvec <- rpois(N, lambda) + rbinom(N, 1, alpha)
}
# Fit our ANOVA BNP model
fit <- anova_bnp_berpoi(yvec, Xmat)
# Simulate a sample
{
set.seed(1)
N <- 1000
d <- 2 * (rnorm(N) <= 0.7) - 1
x <- sample(0L:2L, N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
yvec <-  1.2 * (x == 2L) * d + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat, n = 100L)
# Simulate a sample
{
set.seed(1)
N <- 1000
d <- 2 * (rnorm(N) <= 0.7) - 1
x <- sample(0L:2L, N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
yvec <- runif <= 0.5 + 0.2 * (x == 2L) * d
}
# Simulate a sample
{
set.seed(1)
N <- 1000
d <- 2 * (rnorm(N) <= 0.7) - 1
x <- sample(0L:2L, N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
# yvec <- runif <= 0.5 + 0.2 * (x == 2L) * d
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat, n = 100L)
# Fit our ANOVA BNP model
fit <- anova_bnp_bernoulli(yvec, Xmat, n = 100L)
# Fit our ANOVA BNP model
fit <- anova_bnp_bernoulli(yvec, Xmat)
yvec
yvec <- runif(N) <= (0.5 + 0.2 * (x == 2L) * d)
yvec
# Fit our ANOVA BNP model
fit <- anova_bnp_bernoulli(yvec, Xmat)
# Simulate a sample
{
set.seed(1)
N <- 1000
d <- 2 * (rnorm(N) <= 0.7) - 1
x <- sample(0L:2L, N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
yvec <- runif(N) <= (0.5 + 0.2 * (x == 2L) * d)
}
devtools::load_all(".")
# Fit our ANOVA BNP model
fit <- anova_bnp_bernoulli(yvec, Xmat)
# Show MCMC results for gamma
gamma_chain(fit)
# Show the factors combination associated to each group
group_codes(fit)
# Simulate a sample
{
set.seed(1)
N <- 1000
lambda <- 1
alpha <- 0.5
Xmat <- matrix(1L, nrow = N, ncol = 1)
yvec <- rpois(N, lambda) + rbinom(N, 1, alpha)
}
# Fit our ANOVA BNP model
fit <- anova_bnp_berpoi(yvec, Xmat)
# Simulate a sample
{
set.seed(1)
N <- 1000
d <- 2 * (rnorm(N) <= 0.7) - 1
x <- sample(0L:2L, N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
yvec <- 1.2 * (x == 2L) * d + rnorm(N) / 2
}
devtools::load_all(".")
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat, n = 100L)
# Show MCMC results for gamma
gamma_chain(fit)
# Show the factors combination associated to each group
group_codes(fit)
# Simulate a sample
{
set.seed(1)
N <- 1000
d <- 2 * (rnorm(N) <= 0.7) - 1
x <- sample(0L:2L, N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
yvec <- runif(N) <= (0.5 + 0.2 * (x == 2L) * d)
}
# Fit our ANOVA BNP model
fit <- anova_bnp_bernoulli(yvec, Xmat)
# Show MCMC results for gamma
gamma_chain(fit)
# Show the factors combination associated to each group
group_codes(fit)
# Simulate a sample
{
set.seed(1)
N <- 1000
lambda <- 1
alpha <- 0.5
Xmat <- matrix(1L, nrow = N, ncol = 1)
yvec <- rpois(N, lambda) + rbinom(N, 1, alpha)
}
# Fit our ANOVA BNP model
fit <- anova_bnp_berpoi(yvec, Xmat)
