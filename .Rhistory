install.packages("dplyr")
install.packages("ggplot2")
install.packages("JuliaConnectoR")
library(ANOVABNPTestR)
install.packages("testthat")
library(ANOVABNPTestR)
install.packages("pkgdown")
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_articles()
usethis::use_vignette("getting_started")
install.packages("usethis")
usethis::use_vignette("getting_started")
pkgdown::build_site()
usethis::use_vignette("Getting started")
usethis::use_vignette("getting_started")
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
library(ANOVABNPTestR)
N <- 1000
set.seed(1)
X <- sample(1:2, N * 2, replace = TRUE) |> matrix(ncol = 2)
y <- rnorm(N)
for (i in 1:N) {
if ((X[i, 1] == 2) & (X[i, 2] == 2)) {
y[i] = y[i] + 1
}
}
example_01 <- tibble::tibble(y = y, x1 = X[, 1], x2 = X[, 2])
usethis::use_data(example_01, example_01)
N <- 1000
set.seed(1)
X <- sample(1:2, N * 2, replace = TRUE) |> matrix(ncol = 2)
y <- rnorm(N)
for (i in 1:N) {
if ((X[i, 1] == 2) & (X[i, 2] == 2)) {
y[i] = y[i] + 1
}
}
example_01 <- tibble::tibble(y = y, x1 = X[, 1], x2 = X[, 2])
usethis::use_data(example_01, example_01)
N <- 1000
set.seed(1)
X <- sample(1:2, N * 2, replace = TRUE) |> matrix(ncol = 2)
y <- rnorm(N)
for (i in 1:N) {
if ((X[i, 1] == 2) & (X[i, 2] == 2)) {
y[i] = y[i] + 1
}
}
example_01 <- tibble::tibble(y = y, x1 = X[, 1], x2 = X[, 2])
usethis::use_data(example_01, example_01, overwrite = TRUE)
N <- 1000
set.seed(1)
X <- sample(1:2, N * 2, replace = TRUE) |> matrix(ncol = 2)
y <- rnorm(N)
for (i in 1:N) {
if ((X[i, 1] == 2) & (X[i, 2] == 2)) {
y[i] = y[i] + 1
}
}
example_01 <- tibble::tibble(y = y, x1 = X[, 1], x2 = X[, 2])
usethis::use_data(example_01, example_01, overwrite = TRUE)
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
library(ANOVABNPTestR)
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
?pkgdown::build_site
pkgdown::build_site(preview = FALSE)
pkgdown::build_site(preview = FALSE)
pkgdown::build_site(preview = FALSE)
pkgdown::build_site(preview = FALSE)
pkgdown::build_site(preview = FALSE)
pkgdown::build_site(preview = FALSE)
library(ANOVABNPTestR)
options(pillar.print_max = 3)
example_01
library(ANOVABNPTestR)
options(pillar.print_max = 3)
example_01
head(example_01)
head(example_01)
options(pillar.print_max = 3)
pkgdown::build_site(preview = FALSE)
?ggplot2::facet_grid
library(ANOVABNPTestR)
library(ggplot2)
ggplot2::ggplot(example1, aes(x = y)) +
ggplot2::geom_histogram() +
ggplot2::facet_grid(vars(x1), vars(x2))
ggplot2::ggplot(example_01, aes(x = y)) +
ggplot2::geom_histogram() +
ggplot2::facet_grid(vars(x1), vars(x2))
?ggplot2::facet_wrap
ggplot2::ggplot(example_01, aes(x = y)) +
ggplot2::geom_boxplot() +
ggplot2::facet_wrap(vars(x1, x2))
ggplot2::ggplot(example_01, aes(x = y)) +
ggplot2::geom_boxplot() +
ggplot2::facet_wrap(vars(x1, x2), ncol = 1)
ggplot2::ggplot(example_01, aes(x = y)) +
ggplot2::geom_boxplot() +
ggplot2::facet_wrap(vars(x1, x2), nrow = 1)
ggplot2::ggplot(example_01, aes(x = y)) +
ggplot2::geom_boxplot() +
ggplot2::facet_wrap(vars(x1, x2), ncol = 1)
ggplot2::ggplot(example_01, aes(x = y)) +
ggplot2::geom_boxplot() +
ggplot2::facet_wrap(vars(x1, x2), ncol = 1, strip.position = "right")
ggplot2::ggplot(example_01, aes(x = y)) +
ggplot2::geom_boxplot() +
ggplot2::facet_wrap(vars(x1, x2), ncol = 1, strip.position = "right", labeller = "label_both")
ggplot2::ggplot(example_01, aes(x = y)) +
ggplot2::geom_boxplot() +
ggplot2::facet_wrap(vars(x1, x2), now = 1, labeller = "label_both")
ggplot2::ggplot(example_01, aes(x = y)) +
ggplot2::geom_boxplot() +
ggplot2::facet_wrap(vars(x1, x2), nrow = 1, labeller = "label_both")
ggplot2::ggplot(example_01, aes(x = y)) +
ggplot2::geom_boxplot() +
ggplot2::facet_wrap(vars(x1, x2), nrow = 1, labeller = "label_both", dir = "v")
ggplot2::ggplot(example_01, aes(x = y)) +
ggplot2::geom_boxplot() +
ggplot2::facet_wrap(vars(x1, x2), nrow = 1, labeller = "label_both", dir = "h")
ggplot2::ggplot(example_01, aes(y = y)) +
ggplot2::geom_boxplot() +
ggplot2::facet_wrap(vars(x1, x2), nrow = 1, labeller = "label_both")
ggplot2::ggplot(example_01, aes(y = y)) +
ggplot2::geom_boxplot() +
ggplot2::facet_wrap(
nrow = 1,
vars(x1, x2),
labeller = "label_both"
) +
theme_classic()
pkgdown::build_site(preview = FALSE)
pkgdown::build_site(preview = FALSE)
pkgdown::build_site(preview = FALSE)
pkgdown::build_site(preview = FALSE)
pkgdown::build_site(preview = FALSE)
pkgdown::build_site(preview = FALSE)
pkgdown::build_site(preview = FALSE)
pkgdown::build_site(preview = FALSE)
pkgdown::build_site(preview = FALSE)
pkgdown::build_site(preview = FALSE)
pkgdown::build_site(preview = FALSE)
pkgdown::build_site(preview = FALSE)
pkgdown::build_site(preview = FALSE)
pkgdown::build_site(preview = FALSE)
ggplot(example_01, aes(y = y)) +
geom_boxplot() +
facet_wrap(
nrow = 1,
vars(x1, x2),
labeller = "label_both"
) +
theme_classic() +
theme(panel.spacing = unit(2, "lines"))
ggplot(example_01, aes(y = y)) +
geom_boxplot() +
facet_wrap(
nrow = 1,
vars(x1, x2),
labeller = "label_both"
) +
theme_classic() +
theme(panel.spacing = unit(1, "lines"))
theme(panel.spacing = unit(1, "lines"))
pkgdown::build_site(preview = FALSE)
library(ANOVABNPTestR)
ANOVABNPTestR::setup()
setup()
library(ANOVABNPTestR)
ANOVABNPTestR::setup()
library(ANOVABNPTestR)
library(ANOVABNPTestR)
library(ANOVABNPTestR)
ANOVABNPTestR::setup()
library(ANOVABNPTestR)
library(ANOVABNPTestR)
devtools::load_all()
install.packages("devtools")
devtools::load_all()
library(ANOVABNPTestR)
library(ANOVABNPTestR)
library(ANOVABNPTestR)
library(ANOVABNPTestR)
library(ANOVABNPTestR)
D <- 2
N <- 1000
X <- sample(1:2, N * D, replace = TRUE) |> matrix(nrow = N, ncol = D)
y <- runif(N) < 0.75
library(ANOVABNPTestR)
anova_bnp_normal_bernoulli(y, X)
library(ANOVABNPTestR)
anova_bnp_normal_bernoulli(y, X)
anova_bnp_bernoulli(y, X)
pkgdown::build_site(preview = FALSE)
library(ANOVABNPTestR)
library(ggplot2)
remotes::install_github("igutierrezm/ANOVABNPTestR")
library(ANOVABNPTestR)
library(ggplot2)
foodspoilage <- read_excel("FoodSpoilage.xlsx")
foodspoilage <- readxl::read_excel("FoodSpoilage.xlsx")
# Transforming covariate to integer type
foodspoilage$Preservative[foodspoilage$Preservative=="Formula1"] <- 1
foodspoilage$Preservative[foodspoilage$Preservative=="Formula2"] <- 2
foodspoilage$Preservative <- as.integer(foodspoilage$Preservative)
# Model
yvec <- foodspoilage$Spoilage
Xmat <- foodspoilage[,1:4] |> as.matrix()
fit <- anova_bnp_bernoulli(yvec, Xmat)
ANOVABNPTestR::setup()
fit <- anova_bnp_bernoulli(yvec, Xmat)
View(foodspoilage)
# Model
yvec <- foodspoilage$Spoilage == 1
Xmat <- foodspoilage[,1:4] |> as.matrix()
fit <- anova_bnp_bernoulli(yvec, Xmat)
# Transforming covariate to integer type
foodspoilage$Preservative[foodspoilage$Preservative=="Formula1"] <- 1L
foodspoilage$Preservative[foodspoilage$Preservative=="Formula2"] <- 2L
foodspoilage$Preservative <- as.integer(foodspoilage$Preservative)
# Model
yvec <- foodspoilage$Spoilage == 1
Xmat <- foodspoilage[,1:4] |> as.matrix()
fit <- anova_bnp_bernoulli(yvec, Xmat)
Xmat
Xmat <- foodspoilage[,1:4] |> as.matrix() |> as.integer()
Xmat
Xmat <- foodspoilage[,1:4] |> as.matrix()
fit <- anova_bnp_bernoulli(yvec, Xmat)
# Model
yvec <- foodspoilage$Spoilage == 1
Xmat <- foodspoilage[,1:4] |> as.matrix()
mode(Xmat) <- "integer"
fit <- anova_bnp_bernoulli(yvec, Xmat)
View(foodspoilage)
foodspoilage <- as.integer(foodspoilage)
foodspoilage <- as_integer(foodspoilage)
foodspoilage <- lapply(as.integer, foodspoilage)
foodspoilage <- lapply(foodspoilage, as.integer)
foodspoilage <- lapply(foodspoilage, as.integer) |> as.data.frame()
View(foodspoilage)
# Model
yvec <- foodspoilage$Spoilage == 1
Xmat <- foodspoilage[,1:4] |> as.matrix()
fit <- anova_bnp_bernoulli(yvec, Xmat)
View(Xmat)
unique(yvec)
unique(Xmat)
fit <- anova_bnp_bernoulli(yvec, Xmat)
yvec <- rnorm(length(yvec))
Xmat <- foodspoilage[, 1:4] |> as.matrix()
fit <- anova_bnp_normal(yvec, Xmat)
View(Xmat)
View(Xmat)
View(Xmat)
write.csv(Xmat, file = "Xmat.csv", row.names = FALSE)
write.csv(yvec, file = "yvec.csv", row.names = FALSE)
library(ggplot2)
library(ANOVABNPTestR)
library(ggplot2)
library(ANOVABNPTestR)
library(ggplot2)
ANOVABNPTestR::setup()
foodspoilage <- readxl::read_excel("FoodSpoilage.xlsx")
# Transforming covariate to integer type
foodspoilage$Preservative[foodspoilage$Preservative=="Formula1"] <- 1L
foodspoilage$Preservative[foodspoilage$Preservative=="Formula2"] <- 2L
foodspoilage <- lapply(foodspoilage, as.integer) |> as.data.frame()
# Model
yvec <- foodspoilage$Spoilage == 1
Xmat <- foodspoilage[, 1:4] |> as.matrix()
fit <- anova_bnp_normal(yvec, Xmat)
yvec <- rnorm(length(yvec))
Xmat <- foodspoilage[, 1:4] |> as.matrix()
fit <- anova_bnp_normal(yvec, Xmat)
hypothesis_post_simple(fit)
hypothesis_post_interaction(fit)
predictive_plot_simple(fit, 1) + theme_classic()
library(ANOVABNPTestR)
library(ggplot2)
ANOVABNPTestR::setup()
library(ANOVABNPTestR)
library(ggplot2)
ANOVABNPTestR::setup()
foodspoilage <- readxl::read_excel("FoodSpoilage.xlsx")
# Transforming covariate to integer type
foodspoilage$Preservative[foodspoilage$Preservative=="Formula1"] <- 1L
foodspoilage$Preservative[foodspoilage$Preservative=="Formula2"] <- 2L
foodspoilage <- lapply(foodspoilage, as.integer) |> as.data.frame()
# Model
yvec <- foodspoilage$Spoilage == 1
yvec <- rnorm(length(yvec))
Xmat <- foodspoilage[, 1:4] |> as.matrix()
fit <- anova_bnp_normal(yvec, Xmat)
hypothesis_post_simple(fit)
hypothesis_post_interaction(fit)
predictive_plot_simple(fit, 1) + theme_classic()
predictive_plot_interaction(fit, 1, 2) + theme_classic()
fit
source("R/predictive_plot_simple.R")
predictive_plot_simple(fit, 1) + theme_classic()
library(dplyr)
predictive_plot_simple(fit, 1) + theme_classic()
group_codes(fit)
?c_accros
?c_accross
?c_across
group_codes(fit) |>
mutate(touse = pmax(c_across(-c("group", var1))))
group_codes(fit) |>
mutate(touse = pmax(c_across(-c("group", "x1"))))
group_codes(fit)
pmax(c_across(-c("group", "x1")))
dense_rank(c(2, 3, 4, 2, 1))
a <- group_codes(fit)
a
a %>%
mutate(touse = pmax(c_across(-c("group", "x1"))))
a %>%
mutate(touse = sum(c_across(-c("group", "x1"))))
a %>%
rowwise() %>%
mutate(touse = sum(c_across(-c("group", "x1"))))
source("R/predictive_plot_simple.R")
predictive_plot_simple(fit, 1)
a <- group_codes(fit)
a %>%
rowwise() %>%
mutate(touse = sum(c_across(-c("group", "x1"))))
a %>%
rowwise() %>%
mutate(touse = pmax(c_across(-c("group", "x1"))))
a %>%
rowwise() %>%
mutate(touse = sd(c_across(-c("group", "x1"))))
pmax(c(1, 2, 1))
max(c(1, 2, 1))
a %>%
rowwise() %>%
mutate(touse = max(c_across(-c("group", "x1"))))
source("R/predictive_plot_simple.R")
predictive_plot_simple(fit, 1)
source("R/predictive_plot_simple.R")
predictive_plot_simple(fit, 1)
source("R/predictive_plot_simple.R")
predictive_plot_simple(fit, 1) + theme_classic()
predictive_plot_interaction(fit, 1, 2) + theme_classic()
source("R/predictive_plot_simple.R")
predictive_plot_simple(fit, 1)
?mutate_at
min(c(1,2, 4,-1))
source("R/predictive_plot_simple.R")
predictive_plot_simple(fit, 1)
source("R/predictive_plot_simple.R")
predictive_plot_simple(fit, 1)
source("R/predictive_plot_simple.R")
predictive_plot_simple(fit, 1)
source("R/predictive_plot_simple.R")
predictive_plot_simple(fit, 1)
source("R/predictive_plot_simple.R")
predictive_plot_simple(fit, 1)
source("R/predictive_plot_simple.R")
predictive_plot_simple(fit, 1)
source("R/predictive_plot_simple.R")
predictive_plot_simple(fit, 1)
source("R/predictive_plot_simple.R")
predictive_plot_simple(fit, 1)
source("R/predictive_plot_simple.R")
predictive_plot_simple(fit, 1)
source("R/predictive_plot_simple.R")
predictive_plot_simple(fit, 1)
source("R/predictive_plot_simple.R")
source("R/predictive_plot_interaction.R")
predictive_plot_simple(fit, 1)
predictive_plot_simple(fit, 1) + theme_classic()
predictive_plot_interaction(fit, 1, 2) + theme_classic()
source("R/predictive_plot_simple.R")
source("R/predictive_plot_interaction.R")
predictive_plot_simple(fit, 1) + theme_classic()
predictive_plot_interaction(fit, 1, 2) #+ theme_classic()
source("R/predictive_plot_simple.R")
source("R/predictive_plot_interaction.R")
predictive_plot_simple(fit, 1) + theme_classic()
predictive_plot_interaction(fit, 1, 2) #+ theme_classic()
source("R/predictive_plot_simple.R")
source("R/predictive_plot_interaction.R")
predictive_plot_simple(fit, 1) + theme_classic()
predictive_plot_interaction(fit, 1, 2) #+ theme_classic()
source("R/predictive_plot_simple.R")
source("R/predictive_plot_interaction.R")
predictive_plot_simple(fit, 1) + theme_classic()
predictive_plot_interaction(fit, 1, 2) #+ theme_classic()
source("R/predictive_plot_simple.R")
source("R/predictive_plot_interaction.R")
predictive_plot_simple(fit, 1) + theme_classic()
predictive_plot_interaction(fit, 1, 2) #+ theme_classic()
source("R/predictive_plot_simple.R")
source("R/predictive_plot_interaction.R")
predictive_plot_simple(fit, 1) + theme_classic()
predictive_plot_interaction(fit, 1, 2) #+ theme_classic()
source("R/predictive_plot_simple.R")
source("R/predictive_plot_interaction.R")
predictive_plot_simple(fit, 1) + theme_classic()
predictive_plot_interaction(fit, 1, 2) + theme_classic()
group_codes(fit)
source("R/predictive_plot_simple.R")
source("R/predictive_plot_interaction.R")
predictive_plot_simple(fit, 1) + theme_classic()
predictive_plot_interaction(fit, 1, 2) #+ theme_classic()
View(foodspoilage)
source("R/predictive_plot_simple.R")
source("R/predictive_plot_interaction.R")
predictive_plot_simple(fit, 1) + theme_classic()
predictive_plot_interaction(fit, 1, 2) #+ theme_classic()
source("R/predictive_plot_simple.R")
source("R/predictive_plot_interaction.R")
predictive_plot_simple(fit, 1) + theme_classic()
predictive_plot_interaction(fit, 1, 2) #+ theme_classic()
a <- predictive_plot_interaction(fit, 1, 2) #+ theme_classic()
View(a)
source("R/predictive_plot_simple.R")
source("R/predictive_plot_interaction.R")
predictive_plot_simple(fit, 1) + theme_classic()
a <- predictive_plot_interaction(fit, 1, 2) #+ theme_classic()
View(a)
source("R/predictive_plot_simple.R")
source("R/predictive_plot_interaction.R")
predictive_plot_simple(fit, 1) + theme_classic()
a <- predictive_plot_interaction(fit, 1, 2) #+ theme_classic()
source("R/predictive_plot_simple.R")
source("R/predictive_plot_interaction.R")
predictive_plot_simple(fit, 1) + theme_classic()
a <- predictive_plot_interaction(fit, 1, 2) #+ theme_classic()
a
mutate(
a,
touse = max(c_across(-c("group", "x1", "x1"))))
mutate(
a,
touse = max(c_across(-c("group", "x1", "x2"))))
mutate(
a,
touse = pmax(c_across(-c("group", "x1", "x2"))))
source("R/predictive_plot_simple.R")
source("R/predictive_plot_interaction.R")
predictive_plot_simple(fit, 1) + theme_classic()
a <- predictive_plot_interaction(fit, 1, 2) #+ theme_classic()
a
source("R/predictive_plot_simple.R")
source("R/predictive_plot_interaction.R")
predictive_plot_simple(fit, 1) + theme_classic()
a <- predictive_plot_interaction(fit, 1, 2) #+ theme_classic()
a
source("R/predictive_plot_simple.R")
source("R/predictive_plot_interaction.R")
predictive_plot_simple(fit, 1) + theme_classic()
predictive_plot_interaction(fit, 1, 2) + theme_classic()
source("R/predictive_plot_simple.R")
source("R/predictive_plot_interaction.R")
predictive_plot_simple(fit, 1) + theme_classic()
predictive_plot_interaction(fit, 1, 2) + theme_classic()
ggplot(example_01, aes(y = y)) +
geom_boxplot() +
facet_wrap(
nrow = 1,
vars(x1, x2),
labeller = "label_both"
) +
theme_classic() +
theme(panel.spacing = unit(1, "lines"))
fit <- anova_bnp_normal(yvec, Xmat)
yvec <- example_01[[1]]
Xmat <- example_01[, 2:3] |> as.matrix()
fit <- anova_bnp_normal(yvec, Xmat)
hypothesis_post_simple(fit)
hypothesis_post_interaction(fit)
predictive_plot_simple(fit, 1) +
theme_classic()
predictive_plot_simple(fit, 1) +
theme_classic()
predictive_plot_interaction(fit, 1, 2) +
theme_classic()
