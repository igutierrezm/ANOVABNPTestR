rpois(n, lambda) + rbinom(n, size = 1, prob = phi)
}
n <- 1000
phi <- 0.2
lambda <- 0.5
yvec <- rberpo(n, phi, lambda)
Xmat <- matrix(1L, n, 1)
hist(yvec)
fit <- anova_bnp_berpoi(yvec, Xmat, iter = 20000L, warmup = 10000L)
fit$f_post |>
dplyr::rename(fh = f) |>
dplyr::mutate(f0 = dberpo(y, phi, lambda)) |>
tidyr::pivot_longer(cols = fh:f0) |>
ggplot2::ggplot(
ggplot2::aes(x = y, color = name, y = value)
) +
ggplot2::geom_line()
devtools::load_all(".")
library(ANOVABNPTestR)
library(dplyr)
library(ggplot2)
library(tidyr)
ANOVABNPTestR::setup()
options(download.file.method = "wininet")
ANOVABNPTestR::setup()
1+1
library(ANOVABNPTestR)
library(dplyr)
library(ggplot2)
library(tidyr)
options(download.file.method = "wininet")
ANOVABNPTestR::setup()
devtools::load_all(".")
library(ANOVABNPTestR)
library(dplyr)
library(ggplot2)
library(tidyr)
options(download.file.method = "wininet")
ANOVABNPTestR::setup()
devtools::load_all(".")
library(ANOVABNPTestR)
library(dplyr)
library(ggplot2)
library(tidyr)
ANOVABNPTestR::setup()
library(ANOVABNPTestR)
library(dplyr)
library(ggplot2)
library(tidyr)
devtools::load_all(".")
# Probability mass function Bernoulli Poisson distribution
dberpo <- function(x, phi, lambda) {
phi * dpois(x - 1, lambda) + (1 - phi) * dpois(x, lambda)
}
# Generates random draws from a Bernoulli Poisson distribution
rberpo <- function(n, phi, lambda) {
rpois(n, lambda) + rbinom(n, size = 1, prob = phi)
}
n <- 1000
phi <- 0.2
lambda <- 0.5
yvec <- rberpo(n, phi, lambda)
Xmat <- matrix(1L, n, 1)
hist(yvec)
fit <- anova_bnp_berpoi(yvec, Xmat, iter = 20000L, warmup = 10000L)
fit$f_post |>
dplyr::rename(fh = f) |>
dplyr::mutate(f0 = dberpo(y, phi, lambda)) |>
tidyr::pivot_longer(cols = fh:f0) |>
ggplot2::ggplot(
ggplot2::aes(x = y, color = name, y = value)
) +
ggplot2::geom_line()
n <- 1000
phi <- 0.8
lambda <- 0.5
yvec <- rberpo(n, phi, lambda)
Xmat <- matrix(1L, n, 1)
hist(yvec)
fit <- anova_bnp_berpoi(yvec, Xmat, iter = 20000L, warmup = 10000L)
fit$f_post |>
dplyr::rename(fh = f) |>
dplyr::mutate(f0 = dberpo(y, phi, lambda)) |>
tidyr::pivot_longer(cols = fh:f0) |>
ggplot2::ggplot(
ggplot2::aes(x = y, color = name, y = value)
) +
ggplot2::geom_line()
n <- 2000
phi <- 0.8
lambda <- 0.5
yvec <- rberpo(n, phi, lambda)
Xmat <- matrix(1L, n, 1)
hist(yvec)
fit <- anova_bnp_berpoi(yvec, Xmat, iter = 20000L, warmup = 10000L)
fit$f_post |>
dplyr::rename(fh = f) |>
dplyr::mutate(f0 = dberpo(y, phi, lambda)) |>
tidyr::pivot_longer(cols = fh:f0) |>
ggplot2::ggplot(
ggplot2::aes(x = y, color = name, y = value)
) +
ggplot2::geom_line()
n <- 10000
phi <- 0.8
lambda <- 0.5
yvec <- rberpo(n, phi, lambda)
Xmat <- matrix(1L, n, 1)
hist(yvec)
fit <- anova_bnp_berpoi(yvec, Xmat, iter = 20000L, warmup = 10000L)
fit$f_post |>
dplyr::rename(fh = f) |>
dplyr::mutate(f0 = dberpo(y, phi, lambda)) |>
tidyr::pivot_longer(cols = fh:f0) |>
ggplot2::ggplot(
ggplot2::aes(x = y, color = name, y = value)
) +
ggplot2::geom_line()
library(ANOVABNPTestR)
library(dplyr)
library(ggplot2)
library(tidyr)
# Probability mass function Bernoulli Poisson distribution
dberpo <- function(x, phi, lambda) {
phi * dpois(x - 1, lambda) + (1 - phi) * dpois(x, lambda)
}
# Generates random draws from a Bernoulli Poisson distribution
rberpo <- function(n, phi, lambda) {
rpois(n, lambda) + rbinom(n, size = 1, prob = phi)
}
n <- 10000
phi <- 0.8
lambda <- 0.5
yvec <- rberpo(n, phi, lambda)
Xmat <- matrix(1L, n, 1)
hist(yvec)
fit <-
anova_bnp_berpoi(
yvec,
Xmat,
iter = 2000L,
warmup = 1000L,
rho = 1.0,
a = 0.1,
b = 0.1,
a1 = mean(yvec),
b1 = 1,
alpha0 = 1.0,
beta0 = 1.0,
lb = 0,
ub = 10
)
fit <-
anova_bnp_berpoi(
yvec,
Xmat,
iter = 2000L,
warmup = 1000L,
rho = 1.0,
a = 0.1,
b = 0.1,
a1 = mean(yvec),
b1 = 1,
alpha0 = 1.0,
beta0 = 1.0,
)
n <- 10000
phi <- 0.8
lambda <- 0.5
yvec <- rberpo(n, phi, lambda)
Xmat <- matrix(1L, n, 1)
hist(yvec)
fit <-
anova_bnp_berpoi(
yvec,
Xmat,
iter = 2000L,
warmup = 1000L,
rho = 1.0,
a = 0.1,
b = 0.1,
a1 = numeric(mean(yvec)),
b1 = numeric(1),
alpha0 = 1.0,
beta0 = 1.0,
)
fit <-
anova_bnp_berpoi(
yvec,
Xmat,
iter = 2000L,
warmup = 1000L,
rho = 1.0,
a = 0.1,
b = 0.1,
a1 = numeric(mean(yvec)) + 1,
b1 = numeric(1),
alpha0 = 1.0,
beta0 = 1.0,
)
fit <-
anova_bnp_berpoi(
yvec,
Xmat,
iter = 2000L,
warmup = 1000L,
rho = 1.0,
a = 0.1,
b = 0.1,
a1 = numeric(mean(yvec)) + 1,
b1 = numeric(1),
alpha0 = 1.0,
beta0 = 1.0,
)
?anova_bnp_berpoi
fit <-
anova_bnp_berpoi(
yvec,
Xmat,
iter = 2000L,
warmup = 1000L,
rho = 1.0,
a = 1,
b = 1,
a1 = numeric(mean(yvec)) + 1,
b1 = numeric(1),
alpha0 = 1.0,
beta0 = 1.0,
)
fit <-
anova_bnp_berpoi(
yvec,
Xmat,
iter = 2000L,
warmup = 1000L,
rho = 1.0,
a = 1,
b = 1,
a1 = round(mean(yvec)) + 1,
b1 = 1L,
alpha0 = 1.0,
beta0 = 1.0,
)
fit <-
anova_bnp_berpoi(
yvec,
Xmat,
iter = 2000L,
warmup = 1000L,
rho = 1.0,
a = 1,
b = 1,
a1 = mean(yvec),
b1 = 1,
alpha0 = 1.0,
beta0 = 1.0,
)
fit <-
anova_bnp_berpoi(
yvec,
Xmat,
iter = 2000L,
warmup = 1000L,
rho = 1.0,
a = 1.0,
b = 1.0,
a1 = 1.0,
b1 = 1.0,
alpha0 = 1.0,
beta0 = 1.0,
)
fit$f_post |>
dplyr::rename(fh = f) |>
dplyr::mutate(f0 = dberpo(y, phi, lambda)) |>
tidyr::pivot_longer(cols = fh:f0) |>
ggplot2::ggplot(
ggplot2::aes(x = y, color = name, y = value)
) +
ggplot2::geom_line()
fit <-
anova_bnp_berpoi(
yvec,
Xmat,
iter = 2000L,
warmup = 1000L,
rho = 1.0,
a = 0.1,
b = 0.1,
a1 = 1.0,
b1 = 1.0,
alpha0 = 1.0,
beta0 = 1.0,
)
fit$f_post |>
dplyr::rename(fh = f) |>
dplyr::mutate(f0 = dberpo(y, phi, lambda)) |>
tidyr::pivot_longer(cols = fh:f0) |>
ggplot2::ggplot(
ggplot2::aes(x = y, color = name, y = value)
) +
ggplot2::geom_line()
fit <-
anova_bnp_berpoi(
yvec,
Xmat,
iter = 2000L,
warmup = 1000L,
rho = 1.0,
a = 0.1,
b = 0.1,
a1 = mean(yvec),
b1 = 1.0,
alpha0 = 1.0,
beta0 = 1.0,
)
devtools::load_all(".")
setup()
N <- 1000
x <- as.integer(1 + (runif(2 * N) < 0.5))
Xmat <- matrix(x, nrow = N, ncol = 2)
N <- 1000
x <- as.integer(1 + (runif(2 * N) < 0.5))
Xmat <- matrix(x, nrow = N, ncol = 2)
yvec <- rnorm(N)
fit <- anova_bnp_normal(yvec, Xmat)
hypothesis_post_simple(fit)
hypothesis_post_interaction(fit)
devtools::load_all(".")
N <- 1000
x <- as.integer(1 + (runif(2 * N) < 0.5))
Xmat <- matrix(x, nrow = N, ncol = 2)
yvec <- rnorm(N)
fit <- anova_bnp_normal(yvec, Xmat)
hypothesis_post_simple(fit)
yvec <- rnorm(N)
fit <- anova_bnp_normal(yvec, Xmat)
fit$shift_post
N <- 1000
x <- as.integer(1 + (runif(2 * N) < 0.5))
Xmat <- matrix(x, nrow = N, ncol = 2)
yvec <- rnorm(N)
fit <- anova_bnp_normal(yvec, Xmat)
devtools::load_all(".")
N <- 1000
x <- as.integer(1 + (runif(2 * N) < 0.5))
Xmat <- matrix(x, nrow = N, ncol = 2)
yvec <- rnorm(N)
fit <- anova_bnp_normal(yvec, Xmat)
tbl_shift <- shift_post(fit)
tbl_shift
tbl_shift
# tbl_shift |>
group_codes(fit)
# tbl_shift |>
tbl_shift |>
dplyr::mutate(group = paste("group:", group))
# tbl_shift |>
group <- 2
tbl_shift |>
dplyr::filter(group == {{ group }}) |>
ggplot2::ggplot(ggplot2::aes(x = y, y = shift)) +
ggplot2::geom_line()
predictive_plot_simple(fit, 1)
tbl_shift |>
dplyr::filter(group == {{ group }}) |>
ggplot2::ggplot(ggplot2::aes(x = y, y = shift)) +
ggplot2::geom_line()
x <- sample(1:3, N, replace = TRUE)
x
shift_plot <- function(fit, group) {
tbl_shift |>
dplyr::filter(.data$group == group) |>
ggplot2::ggplot(ggplot2::aes_string(x = "y", y = "shift")) +
ggplot2::geom_line()
}
shift_plot <- function(fit, group) {
tbl_shift |>
shift_post() |>
dplyr::filter(.data$group == group) |>
ggplot2::ggplot(ggplot2::aes_string(x = "y", y = "shift")) +
ggplot2::geom_line()
}
shift_plot(fit, group = 2)
shift_plot <- function(fit, group) {
fit |>
shift_post() |>
dplyr::filter(.data$group == group) |>
ggplot2::ggplot(ggplot2::aes_string(x = "y", y = "shift")) +
ggplot2::geom_line()
}
shift_plot(fit, group = 2)
shift_plot <- function(fit, group) {
fit |>
shift_post() |>
dplyr::filter(.data$group == group) |>
ggplot2::ggplot(ggplot2::aes(x = y, y = shift)) +
ggplot2::geom_line()
}
shift_plot(fit, group = 2)
a <- shift_plot(fit, group = 2)
a
a
shift_plot <- function(fit, group) {
out <-
fit |>
shift_post() |>
dplyr::filter(.data$group == group) |>
ggplot2::ggplot(ggplot2::aes(x = y, y = shift)) +
ggplot2::geom_line()
return(out)
}
shift_plot(fit, group = 2)
shift_plot <- function(fit, group) {
out <-
fit |>
shift_post() |>
dplyr::filter(.data$group == group) |>
ggplot2::ggplot(ggplot2::aes(x = y, y = shift)) +
ggplot2::geom_line()
return(out)
}
shift_plot(fit, group = 2)
fit |>
shift_post() |>
dplyr::filter(.data$group == group) #|>
fit |>
shift_post() |>
dplyr::filter(.data$group == group) |>
ggplot2::ggplot(ggplot2::aes(x = y, y = shift)) #+
fit |>
shift_post() |>
dplyr::filter(.data$group == group) |>
ggplot2::ggplot(ggplot2::aes(x = y, y = shift)) +
ggplot2::geom_line()
a <- fit |>
shift_post() |>
dplyr::filter(.data$group == group) |>
ggplot2::ggplot(ggplot2::aes(x = y, y = shift)) +
ggplot2::geom_line()
a
a <- fit |>
shift_post() |>
dplyr::filter(group == 2) |>
ggplot2::ggplot(ggplot2::aes(x = y, y = shift)) +
ggplot2::geom_line()
a
fit |>
shift_post() |>
dplyr::filter(group == 2) |>
ggplot2::ggplot(ggplot2::aes(x = y, y = shift)) +
ggplot2::geom_line()
fit$shift_post |>
dplyr::filter(group == 2) |>
ggplot2::ggplot(ggplot2::aes(x = y, y = shift)) +
ggplot2::geom_line()
devtools::load_all(".")
N <- 1000
x <- as.integer(1 + (runif(2 * N) < 0.5))
Xmat <- matrix(x, nrow = N, ncol = 2)
yvec <- rnorm(N)
fit <- anova_bnp_normal(yvec, Xmat)
N <- 1000
x <- as.integer(1 + (runif(2 * N) < 0.5))
Xmat <- matrix(x, nrow = N, ncol = 2)
yvec <- rnorm(N)
fit <- anova_bnp_normal(yvec, Xmat)
tbl_shift <- shift_post(fit)
hypothesis_post_simple(fit)
hypothesis_post_interaction(fit)
# tbl_shift |>
group <- 2
tbl_shift |>
dplyr::filter(group == {{ group }}) |>
ggplot2::ggplot(ggplot2::aes(x = y, y = shift)) +
ggplot2::geom_line()
fit$shift_post |>
dplyr::filter(group == 2) |>
ggplot2::ggplot(ggplot2::aes(x = y, y = shift)) +
ggplot2::geom_line()
shift_plot <- function(fit, group) {
out <-
fit |>
shift_post() |>
dplyr::filter(.data$group == group) |>
ggplot2::ggplot(ggplot2::aes(x = y, y = shift)) +
ggplot2::geom_line()
return(out)
}
shift_plot(fit, group = 2)
devtools::load_all(".")
N <- 1000
x <- as.integer(1 + (runif(2 * N) < 0.5))
Xmat <- matrix(x, nrow = N, ncol = 2)
yvec <- rnorm(N)
fit <- anova_bnp_normal(yvec, Xmat)
devtools::load_all(".")
N <- 1000
x <- as.integer(1 + (runif(2 * N) < 0.5))
Xmat <- matrix(x, nrow = N, ncol = 2)
yvec <- rnorm(N)
fit <- anova_bnp_normal(yvec, Xmat)
shift_plot(fit, group = 2)
# Deploy locally
devtools::document()
pkgdown::build_site()
library(ANOVABNPTestR)
# Deploy locally
devtools::document()
pkgdown::build_site()
# Deploy locally
devtools::document()
pkgdown::build_site()
