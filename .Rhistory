N <- 1000
d <- 2 * (rnorm(N) <= 0.7) - 1
x <- sample(0L:2L, N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
yvec <- rpois(N, 3 + 2 * d * (x == 2)) + rbinom(N, 1, 0.5)
}
# Fit our ANOVA BNP model
fit <- anova_bnp_berpoi(yvec, Xmat, iter = 10000L, warmup = 6000L)
# Show MCMC results for gamma
gamma_chain(fit)
# Show the factors combination associated to each group
group_codes(fit)
# Show the posterior distribution of gamma
gamma_post(fit)
# Simulate a sample
{
set.seed(1)
N <- 1000
d <- 2 * (rnorm(N) <= 0.7) - 1
x <- sample(0L:2L, N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
yvec <- runif(N) <= (0.5 + 0.2 * (x == 2L) * d)
}
# Fit our ANOVA BNP model
fit <- anova_bnp_bernoulli(yvec, Xmat, iter = 10000L, warmup = 6000L)
# Show MCMC results for gamma
gamma_chain(fit)
# Show the factors combination associated to each group
group_codes(fit)
# Show the posterior distribution of gamma
gamma_post(fit)
# Simulate a sample
{
set.seed(1)
N <- 1000
d <- 2 * (rnorm(N) <= 0.7) - 1
x <- sample(0L:2L, N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
yvec <- runif(N) <= (0.5 + 0.3 * (x == 2L) * d)
}
# Fit our ANOVA BNP model
fit <- anova_bnp_bernoulli(yvec, Xmat, iter = 10000L, warmup = 6000L)
# Show MCMC results for gamma
gamma_chain(fit)
# Show the factors combination associated to each group
group_codes(fit)
# Show the posterior distribution of gamma
gamma_post(fit)
library(devtools)
use_package("tidyr")
# Show the posterior distribution of gamma
gamma_post(fit)
fit$gamma_post
fit$gamma_post |>
dplyr::arrange(dplyr::across(dplyr::starts_with("Sepal"), dplyr::desc))
fit$gamma_post |>
dplyr::arrange(dplyr::across(dplyr::starts_with("group"), dplyr::desc))
devtools::load_all(".")
fit$gamma_post |>
dplyr::arrange(dplyr::starts_with("group"))
fit$gamma_post |>
dplyr::arrange(dplyr::pick(dplyr::starts_with("group")))
devtools::load_all(".")
# Perform our Dunnet-like test
joint_significance_probability(fit)
# Simulate a sample
{
set.seed(1)
N <- 1000
d <- 2 * (rnorm(N) <= 0.7) - 1
x <- sample(0L:2L, N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
yvec <- runif(N) <= (0.5 + 0.3 * (x == 2L) * d)
}
# Fit our ANOVA BNP model
fit <- anova_bnp_bernoulli(yvec, Xmat, iter = 10000L, warmup = 6000L)
# Show MCMC results for gamma
gamma_chain(fit)
# Show the factors combination associated to each group
group_codes(fit)
# Show the posterior distribution of gamma
gamma_post(fit)
# Perform our Dunnet-like test
joint_significance_probability(fit)
# Simulate a sample
{
set.seed(1)
N <- 1000
d <- 2 * (rnorm(N) <= 0.7) - 1
x <- sample(0L:2L, N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
yvec <- rpois(N, 3 + 2 * d * (x == 2)) + rbinom(N, 1, 0.5)
}
# Fit our ANOVA BNP model
fit <- anova_bnp_berpoi(yvec, Xmat, iter = 10000L, warmup = 6000L)
# Show MCMC results for gamma
gamma_chain(fit)
# Show the factors combination associated to each group
group_codes(fit)
# Show the posterior distribution of gamma
gamma_post(fit)
# Perform our Dunnet-like test
joint_significance_probability(fit)
# Simulate a sample
{
set.seed(1)
N <- 1000
d <- 2 * (rnorm(N) <= 0.7) - 1
x <- sample(0L:2L, N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
yvec <- 1.2 * (x == 2L) * d + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat, n = 100L, iter = 10000L, warmup = 6000L)
# Show MCMC results for gamma
gamma_chain(fit)
# Show the factors combination associated to each group
group_codes(fit)
# Show the posterior distribution of gamma
gamma_post(fit)
# Perform our Dunnet-like test
joint_significance_probability(fit)
fit$gamma_post |>
dplyr::arrange(dplyr::pick(dplyr::starts_with("group"))) |>
dplyr::slice_head(n = 1) |>
dplyr::pull(prob) |>
tidyr::pivot_longer(-prob)
fit$gamma_post |>
dplyr::arrange(dplyr::pick(dplyr::starts_with("group"))) |>
dplyr::slice_head(n = 1) |>
dplyr::pull(prob)
fit$gamma_post |>
dplyr::arrange(dplyr::pick(dplyr::starts_with("group"))) |>
dplyr::slice_head(n = 1)
fit$gamma_post |>
dplyr::arrange(dplyr::pick(dplyr::starts_with("group"))) |>
dplyr::slice_head(n = 1) |>
tidyr::pivot_longer(-prob)
devtools::load_all(".")
# Simulate a sample
{
set.seed(1)
N <- 1000
d <- 2 * (rnorm(N) <= 0.7) - 1
x <- sample(0L:2L, N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
yvec <- 1.2 * (x == 2L) * d + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat, n = 100L, iter = 10000L, warmup = 6000L)
# Show MCMC results for gamma
gamma_chain(fit)
# Show the factors combination associated to each group
group_codes(fit)
# Show the posterior distribution of gamma
gamma_post(fit)
# Perform our Dunnet-like test
joint_significance_probability(fit)
# Simulate a sample
{
set.seed(1)
N <- 1000
d <- 2 * (rnorm(N) <= 0.7) - 1
x <- sample(0L:2L, N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
yvec <- runif(N) <= (0.5 + 0.3 * (x == 2L) * d)
}
# Fit our ANOVA BNP model
fit <- anova_bnp_bernoulli(yvec, Xmat, iter = 10000L, warmup = 6000L)
# Show MCMC results for gamma
gamma_chain(fit)
# Show the factors combination associated to each group
group_codes(fit)
# Show the posterior distribution of gamma
gamma_post(fit)
# Perform our Dunnet-like test
joint_significance_probability(fit)
# Simulate a sample
{
set.seed(1)
N <- 1000
d <- 2 * (rnorm(N) <= 0.7) - 1
x <- sample(0L:2L, N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
yvec <- rpois(N, 3 + 2 * d * (x == 2)) + rbinom(N, 1, 0.5)
}
# Fit our ANOVA BNP model
fit <- anova_bnp_berpoi(yvec, Xmat, iter = 10000L, warmup = 6000L)
# Show MCMC results for gamma
gamma_chain(fit)
# Show the factors combination associated to each group
group_codes(fit)
# Show the posterior distribution of gamma
gamma_post(fit)
# Perform our Dunnet-like test
joint_significance_probability(fit)
session_info()
devtools::load_all(".")
# Simulate a sample
{
set.seed(1)
N <- 1000
d <- 2 * (rnorm(N) <= 0.7) - 1
x <- sample(0L:2L, N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
yvec <- 1.2 * (x == 2L) * d + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat, n = 100L, iter = 10000L, warmup = 6000L)
# Show MCMC results for gamma
gamma_chain(fit)
# Show the factors combination associated to each group
group_codes(fit)
# Show the posterior distribution of gamma
gamma_post(fit)
# Perform our Dunnet-like test
joint_significance_probability(fit)
devtools::load_all(".")
# Show the shift function
shift_post(fit)
devtools::load_all(".")
# Show the shift function
shift_post(fit)
devtools::load_all(".")
# Simulate a sample
{
set.seed(1)
N <- 1000
d <- 2 * (rnorm(N) <= 0.7) - 1
x <- sample(0L:2L, N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
yvec <- 1.2 * (x == 2L) * d + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat, n = 100L, iter = 10000L, warmup = 6000L)
devtools::load_all(".")
# Simulate a sample
{
set.seed(1)
N <- 1000
d <- 2 * (rnorm(N) <= 0.7) - 1
x <- sample(0L:2L, N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
yvec <- 1.2 * (x == 2L) * d + rnorm(N) / 2
}
devtools::load_all(".")
# Simulate a sample
{
set.seed(1)
N <- 1000
d <- 2 * (rnorm(N) <= 0.7) - 1
x <- sample(0L:2L, N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
yvec <- 1.2 * (x == 2L) * d + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat, n = 100L, iter = 10000L, warmup = 6000L)
# Show MCMC results for gamma
gamma_chain(fit)
# Show the factors combination associated to each group
group_codes(fit)
# Show the posterior distribution of gamma
gamma_post(fit)
# Perform our Dunnet-like test
joint_significance_probability(fit)
# Show the shift function
shift_post(fit)
fit
devtools::load_all(".")
# Show the shift function
shift_post(fit)
# Show the shift function
shift_post(fit) |>
dplyr::filter(group1 == 0, group2 == 2)
# Show the shift function
shift_post(fit) |>
dplyr::filter(group1 == 1, group2 == 3)
# Show the factors combination associated to each group
group_codes(fit)
# Show the shift function
shift_plot(fit, group1 = 1, group2 = 3) |>
ggplot2::ggplot(ggplot2::aes(x = y, y = shift)) +
ggplot2::geom_line()
# Show the shift function
shift_plot(fit, group1 = 1, group2 = 3)
# Simulate a sample
{
set.seed(1)
N <- 1000
d <- 2 * (rnorm(N) <= 0.7) - 1
x <- sample(0L:2L, N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
yvec <- runif(N) <= (0.5 + 0.3 * (x == 2L))
}
# Fit our ANOVA BNP model
fit <- anova_bnp_bernoulli(yvec, Xmat, iter = 10000L, warmup = 6000L)
# Show MCMC results for gamma
gamma_chain(fit)
# Show the factors combination associated to each group
group_codes(fit)
# Show the posterior distribution of gamma
gamma_post(fit)
# Perform our Dunnet-like test
joint_significance_probability(fit)
# Show the shift function
shift_plot(fit, group1 = 1, group2 = 3)
shift_post(fit)
# Show the posterior distribution of gamma
gamma_post(fit)
# Perform our Dunnet-like test
joint_significance_probability(fit)
shift_post(fit)
f_post(fit)
# Simulate a sample
{
set.seed(1)
N <- 1000
d <- 2 * (rnorm(N) <= 0.7) - 1
x <- sample(0L:2L, N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
yvec <- runif(N) <= (0.5 + 0.3 * (x == 2L))
}
# Fit our ANOVA BNP model
fit <- anova_bnp_bernoulli(yvec, Xmat, iter = 10000L, warmup = 6000L)
devtools::load_all(".")
# Simulate a sample
{
set.seed(1)
N <- 1000
d <- 2 * (rnorm(N) <= 0.7) - 1
x <- sample(0L:2L, N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
yvec <- runif(N) <= (0.5 + 0.3 * (x == 2L))
}
# Fit our ANOVA BNP model
fit <- anova_bnp_bernoulli(yvec, Xmat, iter = 10000L, warmup = 6000L)
# Show MCMC results for gamma
gamma_chain(fit)
# Show the factors combination associated to each group
group_codes(fit)
# Show the posterior distribution of gamma
gamma_post(fit)
# Perform our Dunnet-like test
joint_significance_probability(fit)
# Show the shift function
shift_plot(fit, group1 = 1, group2 = 3)
f_post(fit)
shift_post(fit)
devtools::load_all(".")
# Simulate a sample
{
set.seed(1)
N <- 1000
d <- 2 * (rnorm(N) <= 0.7) - 1
x <- sample(0L:2L, N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
yvec <- runif(N) <= (0.5 + 0.3 * (x == 2L))
}
# Fit our ANOVA BNP model
fit <- anova_bnp_bernoulli(yvec, Xmat, iter = 10000L, warmup = 6000L)
# Show MCMC results for gamma
gamma_chain(fit)
# Show the factors combination associated to each group
group_codes(fit)
# Show the posterior distribution of gamma
gamma_post(fit)
# Perform our Dunnet-like test
joint_significance_probability(fit)
# Show the shift function
# shift_plot(fit, group1 = 1, group2 = 3)
f_post(fit)
log(0.5)
F_post(fit)
devtools::load_all(".")
devtools::document()
devtools::load_all(".")
# Simulate a sample
{
set.seed(1)
N <- 1000
d <- 2 * (rnorm(N) <= 0.7) - 1
x <- sample(0L:2L, N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
yvec <- runif(N) <= (0.5 + 0.3 * (x == 2L))
}
# Fit our ANOVA BNP model
fit <- anova_bnp_bernoulli(yvec, Xmat, iter = 10000L, warmup = 6000L)
# Show MCMC results for gamma
gamma_chain(fit)
# Show the factors combination associated to each group
group_codes(fit)
# Show the posterior distribution of gamma
gamma_post(fit)
# Perform our Dunnet-like test
joint_significance_probability(fit)
# Show the shift function
# shift_plot(fit, group1 = 1, group2 = 3)
f_post(fit)
F_post(fit)
Fpost <- F_post(fit)
tbl_Fpost1 =
Fpost |>
dplyr::rename(group1 = group) |>
dplyr::rename(y1 = y) |>
dplyr::rename(F1 = F)
tbl_Fpost1 =
Fpost |>
dplyr::rename(group2 = group) |>
dplyr::rename(y2 = y) |>
dplyr::rename(F2 = F)
tbl_shift <-
tbl_Fpost1 |>
dplyr::cross_join(tbl_Fpost2)# |>
Fpost <- F_post(fit)
tbl_Fpost1 =
Fpost |>
dplyr::rename(group1 = group) |>
dplyr::rename(y1 = y) |>
dplyr::rename(F1 = F)
tbl_Fpost2 <-
Fpost |>
dplyr::rename(group2 = group) |>
dplyr::rename(y2 = y) |>
dplyr::rename(F2 = F)
Fpost <- F_post(fit)
tbl_Fpost1 =
Fpost |>
dplyr::rename(group1 = group) |>
dplyr::rename(y1 = y) |>
dplyr::rename(F1 = F)
tbl_Fpost2 <-
Fpost |>
dplyr::rename(group2 = group) |>
dplyr::rename(y2 = y) |>
dplyr::rename(F2 = F)
tbl_shift <-
tbl_Fpost1 |>
dplyr::cross_join(tbl_Fpost2)# |>
tbl_shift <-
tbl_Fpost1 |>
dplyr::cross_join(tbl_Fpost2) |>
dplyr::arrange(group1, group2, F1, F2)# |>
tbl_shift
tbl_shift <-
tbl_Fpost1 |>
dplyr::cross_join(tbl_Fpost2) |>
dplyr::arrange(group1, group2, F1, F2) |>
dplyr::filter(F2 >= F1) #|>
# tbl_shift <-
tbl_Fpost1 |>
dplyr::cross_join(tbl_Fpost2) |>
dplyr::arrange(group1, group2, F1, F2) |>
dplyr::filter(F2 >= F1) #|>
# tbl_shift <-
tbl_Fpost1 |>
dplyr::cross_join(tbl_Fpost2) |>
dplyr::arrange(group1, group2, F1, F2) |>
dplyr::filter(F2 >= F1) |>
dplyr::group_by(x, group1, group2, y1) #|>
# tbl_shift <-
tbl_Fpost1 |>
dplyr::cross_join(tbl_Fpost2) |>
dplyr::arrange(group1, group2, F1, F2) |>
dplyr::filter(F2 >= F1) |>
dplyr::group_by(group1, group2, y1) #|>
# tbl_shift <-
tbl_Fpost1 |>
dplyr::cross_join(tbl_Fpost2) |>
dplyr::arrange(group1, group2, F1, F2) |>
dplyr::filter(F2 >= F1) |>
dplyr::group_by(group1, group2, y1) |>
dplyr::slice_head(n = 1) #|>
# tbl_shift <-
tbl_Fpost1 |>
dplyr::cross_join(tbl_Fpost2) |>
dplyr::arrange(group1, group2, F1, F2) |>
dplyr::filter(F2 >= F1) |>
dplyr::group_by(group1, group2, y1) |>
dplyr::slice_head(n = 1) |>
dplyr::mutate(shift = y2 - y1) #|>
# tbl_shift <-
tbl_Fpost1 |>
dplyr::cross_join(tbl_Fpost2) |>
dplyr::arrange(group1, group2, F1, F2) |>
dplyr::filter(F2 >= F1) |>
dplyr::group_by(group1, group2, y1) |>
dplyr::slice_head(n = 1) |>
dplyr::mutate(shift = y2 - y1) |>
dplyr::rename(y = y1) #|>
# tbl_shift <-
tbl_Fpost1 |>
dplyr::cross_join(tbl_Fpost2) |>
dplyr::arrange(group1, group2, F1, F2) |>
dplyr::filter(F2 >= F1) |>
dplyr::group_by(group1, group2, y1) |>
dplyr::slice_head(n = 1) |>
dplyr::mutate(shift = y2 - y1) |>
dplyr::rename(y = y1) |>
dplyr::filter(group1 != group2) #|>
# tbl_shift <-
tbl_Fpost1 |>
dplyr::cross_join(tbl_Fpost2) |>
dplyr::arrange(group1, group2, F1, F2) |>
dplyr::filter(F2 >= F1) |>
dplyr::group_by(group1, group2, y1) |>
dplyr::slice_head(n = 1) |>
dplyr::mutate(shift = y2 - y1) |>
dplyr::rename(y = y1) |>
dplyr::filter(group1 != group2) |>
# x -> DataFrames.filter(:F1 => F1 -> 1e-2 < F1 < 1 - 1e-2, x) |>
# x -> DataFrames.filter(:F2 => F2 -> 1e-2 < F2 < 1 - 1e-2, x) |>
dplyr::select(group1, group2, y, shift)
