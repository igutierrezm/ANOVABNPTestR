<<<<<<< HEAD
yvec <- rnorm(N)
fit <- anova_bnp_normal(yvec, Xmat)
tbl_shift <- shift_post(fit)
hypothesis_post_simple(fit)
hypothesis_post_interaction(fit)
# tbl_shift |>
group <- 2
tbl_shift |>
dplyr::filter(group == {{ group }}) |>
ggplot2::ggplot(ggplot2::aes(x = y, y = shift)) +
ggplot2::geom_line()
fit$shift_post |>
dplyr::filter(group == 2) |>
ggplot2::ggplot(ggplot2::aes(x = y, y = shift)) +
ggplot2::geom_line()
shift_plot <- function(fit, group) {
out <-
fit |>
shift_post() |>
dplyr::filter(.data$group == group) |>
ggplot2::ggplot(ggplot2::aes(x = y, y = shift)) +
ggplot2::geom_line()
return(out)
}
shift_plot(fit, group = 2)
devtools::load_all(".")
N <- 1000
x <- as.integer(1 + (runif(2 * N) < 0.5))
Xmat <- matrix(x, nrow = N, ncol = 2)
yvec <- rnorm(N)
fit <- anova_bnp_normal(yvec, Xmat)
devtools::load_all(".")
N <- 1000
x <- as.integer(1 + (runif(2 * N) < 0.5))
Xmat <- matrix(x, nrow = N, ncol = 2)
yvec <- rnorm(N)
fit <- anova_bnp_normal(yvec, Xmat)
shift_plot(fit, group = 2)
# Deploy locally
devtools::document()
pkgdown::build_site()
library(ANOVABNPTestR)
# Deploy locally
devtools::document()
pkgdown::build_site()
# Deploy locally
devtools::document()
pkgdown::build_site()
N <- 1000
d <- sample(c(-1, +1), 1 * N, replace = TRUE, prob = c(0.3, 0.7))
x <- sample(c(+1, +2), 2 * N, replace = TRUE)
devtools::load_all(".")
Xmat <- matrix(x, nrow = N, ncol = 2)
N <- 1000
d <- sample(c(-1, +1), 1 * N, replace = TRUE, prob = c(0.3, 0.7))
x <- sample(c(+1, +2), 2 * N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 2)
yvec <- 1.2 * d + rnorm(N) / 2
fit <- anova_bnp_normal(yvec, Xmat)
N <- 1000
d <- sample(c(-1, +1), 1 * N, replace = TRUE, prob = c(0.3, 0.7))
x <- sample(c(1L, 2L), 2 * N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 2)
yvec <- 1.2 * d + rnorm(N) / 2
fit <- anova_bnp_normal(yvec, Xmat)
# Simulate a sample
{
N <- 1000
d <- sample(c(-1, +1), 1 * N, replace = TRUE, prob = c(0.3, 0.7))
x <- sample(c(1L, 2L), 2 * N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 2)
gvec1 <- Xmat[, 1]
gvec2 <- Xmat[, 1]
yvec <- 1.2 * d * (gvec1 == 1) * (gvec1 == 2) + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat)
# Plot the shift function for the second cell
shift_plot(fit, group = 4)
# Plot the shift function for the second cell
shift_plot(fit, group = 3)
# Plot the shift function for the second cell
shift_plot(fit, group = 2)
# Simulate a sample
{
N <- 1000
d <- sample(c(-1, +1), 1 * N, replace = TRUE, prob = c(0.3, 0.7))
x <- sample(c(1L, 2L), 2 * N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 2)
gvec1 <- Xmat[, 1]
gvec2 <- Xmat[, 2]
yvec <- 1.2 * d * (gvec1 == 1) * (gvec1 == 2) + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat)
# Plot the shift function for the second cell
shift_plot(fit, group = 2)
# Plot the shift function for the second cell
shift_plot(fit, group = 3)
# Plot the shift function for the second cell
shift_plot(fit, group = 4)
# Simulate a sample
{
N <- 1000
d <- sample(c(-1, +1), 1 * N, replace = TRUE, prob = c(0.3, 0.7))
x <- sample(c(1L, 2L), 2 * N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 2)
gvec1 <- Xmat[, 1]
gvec2 <- Xmat[, 2]
yvec <- 1.2 * d * (gvec1 == 1) * (gvec2 == 2) + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat)
# Plot the shift function for the second cell
shift_plot(fit, group = 2)
# Plot the shift function for the second cell
shift_plot(fit, group = 3)
# Plot the shift function for the second cell
shift_plot(fit, group = 4)
# Plot the shift function for the second cell
shift_post(fit)
fit |>
shift_post() |>
dplyr::distinct(group, y)
fit |>
shift_post() |>
dplyr::filter(group == 4)
fit |>
shift_post() |>
dplyr::filter(group == 4) |>
ggplot2::ggplot(ggplot2::aes(x = y, y = shift)) +
ggplot2::geom_line()
fit |>
shift_post() |>
dplyr::filter(group == 3) |>
ggplot2::ggplot(ggplot2::aes(x = y, y = shift)) +
ggplot2::geom_line()
fit |>
shift_post() |>
dplyr::filter(group == 2) |>
ggplot2::ggplot(ggplot2::aes(x = y, y = shift)) +
ggplot2::geom_line()
devtools::load_all(".")
# Simulate a sample
{
N <- 1000
d <- sample(c(-1, +1), 1 * N, replace = TRUE, prob = c(0.3, 0.7))
x <- sample(c(1L, 2L), 2 * N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 2)
gvec1 <- Xmat[, 1]
gvec2 <- Xmat[, 2]
yvec <- 1.2 * d * (gvec1 == 1) * (gvec2 == 2) + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat)
# Plot the shift function for the second cell
shift_plot(fit, group = 2)
shift_plot(fit, group = 3)
# Plot the shift function for the second cell
shift_plot(fit, group = 2) #
# Simulate a sample
{
N <- 1000
d <- sample(c(-1, +1), 1 * N, replace = TRUE, prob = c(0.3, 0.7))
x <- sample(c(1L, 2L), 2 * N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 2)
gvec1 <- Xmat[, 1]
gvec2 <- Xmat[, 2]
yvec <- 1.2 * d * (gvec1 == 1) * (gvec2 == 2) + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat)
devtools::load_all(".")
=======
gvec2 <- Xmat[, 2]
yvec <- 1.2 * d * (gvec1 == 1) * (gvec2 == 2) + rnorm(N) / 2
}
>>>>>>> 8a7ba73647b853c14918b9a7c40ee3467ce3c6f3
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat)
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like a tan().
shift_plot(fit, group = 3) # this should be a straight line.
<<<<<<< HEAD
# Simulate a sample
{
N <- 1000
d <- sample(c(-1, +1), 1 * N, replace = TRUE, prob = c(0.3, 0.7))
x <- sample(c(1L, 2L), 2 * N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 2)
gvec1 <- Xmat[, 1]
gvec2 <- Xmat[, 2]
yvec <- 1.2 * d * (gvec1 == 1) * (gvec2 == 2) + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat)
devtools::load_all(".")
# Simulate a sample
{
N <- 1000
d <- sample(c(-1, +1), 1 * N, replace = TRUE, prob = c(0.3, 0.7))
x <- sample(c(1L, 2L), 2 * N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 2)
gvec1 <- Xmat[, 1]
gvec2 <- Xmat[, 2]
yvec <- 1.2 * d * (gvec1 == 1) * (gvec2 == 2) + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat)
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like a tan().
shift_plot(fit, group = 3) # this should be a straight line.
# Simulate a sample
{
N <- 1000
d <- sample(c(-1, +1), 1 * N, replace = TRUE, prob = c(0.3, 0.7))
x <- sample(c(1L, 2L), 2 * N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 2)
gvec1 <- Xmat[, 1]
gvec2 <- Xmat[, 2]
yvec <- 1.2 * d * (gvec1 == 1) * (gvec2 == 2) + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat)
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like a tan().
shift_plot(fit, group = 3) # this should be a straight line.
lm.fit(Xmat[, 1], y)
Xmat[, 1]
typeof(Xmat[, 1])
class(Xmat[, 1])
dim(Xmat[, 1])
ncol(Xmat[, 1])
ncol(Xmat[, 1:1])
ncol(Xmat[1:2, 1:1])
Xmat[1:2, 1:1]
df <- data.frame(y = y, x = Xmat[, 1])
df <- data.frame(y = yvec, x = Xmat[, 1])
lm.fit(df, y ~ x)
df <- data.frame(y = yvec, x = Xmat[, 1])
lm(df, y ~ x)
lm(y ~ x, df)
lm(y ~ x, df) |> summary()
df <- data.frame(y = yvec, x1 = Xmat[, 1], x2 = Xmat[, 2])
lm(y ~ x1 * x2, df) |> summary()
df <- data.frame(y = yvec, x1 = Xmat[, 1], x2 = Xmat[, 2])
lm(y ~ x1 * x2, df) |> summary()
# Simulate a sample
{
N <- 10000
d <- sample(c(-1, +1), 1 * N, replace = TRUE, prob = c(0.3, 0.7))
x <- sample(c(1L, 2L), 2 * N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 2)
gvec1 <- Xmat[, 1]
gvec2 <- Xmat[, 2]
yvec <- 1.2 * d * (gvec1 == 1) * (gvec2 == 2) + rnorm(N) / 2
}
df <- data.frame(y = yvec, x1 = Xmat[, 1], x2 = Xmat[, 2])
lm(y ~ x1 * x2, df) |> summary()
# Simulate a sample
{
N <- 10000
d <- sample(c(-1, +1), 1 * N, replace = TRUE, prob = c(0.3, 0.7))
x <- sample(c(1L, 2L), 2 * N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 2)
gvec1 <- Xmat[, 1]
gvec2 <- Xmat[, 2]
yvec <- (gvec1 == 1) * (gvec2 == 2) + rnorm(N) / 2
}
df <- data.frame(y = yvec, x1 = Xmat[, 1], x2 = Xmat[, 2])
lm(y ~ x1 * x2, df) |> summary()
devtools::load_all(".")
setup()
devtools::load_all(".")
# Simulate a sample
{
N <- 10000
=======
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like a tan().
shift_plot(fit, group = 3) # this should be a straight line.
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like a tan().
setup()
# Simulate a sample
{
N <- 1000
d <- sample(c(-1, +1), 1 * N, replace = TRUE, prob = c(0.3, 0.7))
x <- sample(c(1L, 2L), 2 * N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 2)
gvec1 <- Xmat[, 1]
gvec2 <- Xmat[, 2]
yvec <- 1.2 * d * (gvec1 == 1) * (gvec2 == 2) + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat)
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like a tan().
shift_plot(fit, group = 3) # this should be a straight line.
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like a tan().
# Simulate a sample
{
N <- 1000
d <- sample(c(-1, +1), 1 * N, replace = TRUE, prob = c(0.3, 0.7))
x <- sample(c(1L, 2L), 2 * N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 2)
gvec1 <- Xmat[, 1]
gvec2 <- Xmat[, 2]
yvec <- 1.2 * d * (gvec1 == 1) * (gvec2 == 2) + rnorm(N) / 2
}
setup()
# Simulate a sample
{
N <- 1000
d <- sample(c(-1, +1), 1 * N, replace = TRUE, prob = c(0.3, 0.7))
x <- sample(c(1L, 2L), 2 * N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 2)
gvec1 <- Xmat[, 1]
gvec2 <- Xmat[, 2]
yvec <- 1.2 * d * (gvec1 == 1) * (gvec2 == 2) + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat)
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like a tan().
shift_plot(fit, group = 3) # this should be a straight line.
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like a tan().
shift_plot(fit, group = 3) # this should be a straight line.
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like a tan().
shift_plot(fit, group = 3) # this should be a straight line.
devtools::load_all(".")
# Simulate a sample
{
N <- 1000
>>>>>>> 8a7ba73647b853c14918b9a7c40ee3467ce3c6f3
d <- sample(c(-1, +1), 1 * N, replace = TRUE, prob = c(0.3, 0.7))
x <- sample(c(1L, 2L), 2 * N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 2)
gvec1 <- Xmat[, 1]
gvec2 <- Xmat[, 2]
<<<<<<< HEAD
yvec <- (gvec1 == 1) * (gvec2 == 2) + rnorm(N) / 2
}
df <- data.frame(y = yvec, x1 = Xmat[, 1], x2 = Xmat[, 2])
lm(y ~ x1 * x2, df) |> summary()
=======
yvec <- 1.2 * d * (gvec1 == 1) * (gvec2 == 2) + rnorm(N) / 2
}
>>>>>>> 8a7ba73647b853c14918b9a7c40ee3467ce3c6f3
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat)
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like a tan().
shift_plot(fit, group = 3) # this should be a straight line.
<<<<<<< HEAD
devtools::load_all(".")
shift_plot(fit, group = 3) # this should be a straight line.
shift_plot(fit, group = 3) # this should be a straight line.
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like a tan().
devtools::load_all(".")
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like a tan().
devtools::load_all(".")
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like a tan().
shift_plot(fit, group = 3) # this should be a straight line.
shift_plot(fit, group = 3) # this should be a straight line.
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like a tan().
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat, n = 100)
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat, n = 100L)
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like a tan().
shift_plot(fit, group = 3) # this should be a straight line.
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like a tan().
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like a tan().
shift_plot(fit, group = 3) # this should be a straight line.
devtools::load_all(".")
setup()
devtools::load_all(".")
setup()
# Simulate a sample
{
N <- 10000
=======
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like a tan().
shift_plot(fit, group = 3) # this should be a straight line.
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like a tan().
devtools::load_all(".")
# Simulate a sample
{
N <- 1000
d <- sample(c(-1, +1), 1 * N, replace = TRUE, prob = c(0.3, 0.7))
x <- sample(c(1L, 2L), 2 * N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 2)
gvec1 <- Xmat[, 1]
gvec2 <- Xmat[, 2]
yvec <- 1.2 * d * (gvec1 == 1) * (gvec2 == 2) + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat)
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like a tan().
shift_plot(fit, group = 3) # this should be a straight line.
devtools::load_all(".")
# Simulate a sample
{
N <- 1000
d <- sample(c(-1, +1), 1 * N, replace = TRUE, prob = c(0.3, 0.7))
x <- sample(c(1L, 2L), 2 * N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 2)
gvec1 <- Xmat[, 1]
gvec2 <- Xmat[, 2]
yvec <- 1.2 * d * (gvec1 == 1) * (gvec2 == 2) + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat)
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like a tan().
shift_plot(fit, group = 3) # this should be a straight line.
# Simulate a sample
{
N <- 1000
d <- sample(c(-1, +1), 1 * N, replace = TRUE, prob = c(0.3, 0.7))
x <- sample(c(1L, 2L), 2 * N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 2)
gvec1 <- Xmat[, 1]
gvec2 <- Xmat[, 2]
# yvec <- 1.2 * d * (gvec1 == 1) * (gvec2 == 2) + rnorm(N) / 2
yvec <- rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat)
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should be a straight line.
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should be a straight line.
# Simulate a sample
{
N <- 1000
d <- sample(c(-1, +1), 1 * N, replace = TRUE, prob = c(0.3, 0.7))
x <- sample(c(1L, 2L), 2 * N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 2)
gvec1 <- Xmat[, 1]
gvec2 <- Xmat[, 2]
# yvec <- 1.2 * d * (gvec1 == 1) * (gvec2 == 2) + rnorm(N) / 2
yvec <- rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat)
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should be a straight line.
shift_plot(fit, group = 3) # this should look like an inverted tan().
predictive_plot_simple(fit)
predictive_plot_simple(fit, 2)
predictive_plot_simple(fit, 3)
predictive_plot_simple(fit, 1)
predictive_plot_simple(fit, 4)
predictive_plot_simple(fit, 1)
predictive_plot_simple(fit, 2)
devtools::load_all(".")
# Simulate a sample
{
N <- 1000
>>>>>>> 8a7ba73647b853c14918b9a7c40ee3467ce3c6f3
d <- sample(c(-1, +1), 1 * N, replace = TRUE, prob = c(0.3, 0.7))
x <- sample(c(1L, 2L), 2 * N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 2)
gvec1 <- Xmat[, 1]
gvec2 <- Xmat[, 2]
<<<<<<< HEAD
yvec <- (gvec1 == 1) * (gvec2 == 2) + rnorm(N) / 2
}
df <- data.frame(y = yvec, x1 = Xmat[, 1], x2 = Xmat[, 2])
lm(y ~ x1 * x2, df) |> summary()
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat, n = 100L)
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like a tan().
shift_plot(fit, group = 3) # this should be a straight line.
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like a tan().
shift_plot(fit, group = 3) # this should be a straight line.
# Simulate a sample
{
N <- 100
=======
# yvec <- 1.2 * d * (gvec1 == 1) * (gvec2 == 2) + rnorm(N) / 2
yvec <- rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat)
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should be a straight line.
shift_plot(fit, group = 3) # this should look like an inverted tan().
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should be a straight line.
devtools::load_all(".")
devtools::load_all(".")
# Simulate a sample
{
N <- 1000
>>>>>>> 8a7ba73647b853c14918b9a7c40ee3467ce3c6f3
d <- sample(c(-1, +1), 1 * N, replace = TRUE, prob = c(0.3, 0.7))
x <- sample(c(1L, 2L), 2 * N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 2)
gvec1 <- Xmat[, 1]
gvec2 <- Xmat[, 2]
<<<<<<< HEAD
yvec <- (gvec1 == 1) * (gvec2 == 2) + rnorm(N) / 2
}
df <- data.frame(y = yvec, x1 = Xmat[, 1], x2 = Xmat[, 2])
lm(y ~ x1 * x2, df) |> summary()
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat, n = 100L)
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like a tan().
shift_plot(fit, group = 3) # this should be a straight line.
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like a tan().
shift_plot(fit, group = 3) # this should be a straight line.
# Simulate a sample
{
=======
# yvec <- 1.2 * d * (gvec1 == 1) * (gvec2 == 2) + rnorm(N) / 2
yvec <- rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat)
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like an inverted tan().
shift_plot(fit, group = 3) # this should be a straight line.
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like an inverted tan().
shift_plot(fit, group = 3) # this should be a straight line.
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like an inverted tan().
shift_plot(fit, group = 3) # this should be a straight line.
devtools::load_all(".")
# Simulate a sample
{
N <- 1000
d <- sample(c(-1, +1), 1 * N, replace = TRUE, prob = c(0.3, 0.7))
x <- sample(c(1L, 2L), 2 * N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 2)
gvec1 <- Xmat[, 1]
gvec2 <- Xmat[, 2]
# yvec <- 1.2 * d * (gvec1 == 1) * (gvec2 == 2) + rnorm(N) / 2
yvec <- rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat)
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like an inverted tan().
shift_plot(fit, group = 3) # this should be a straight line.
devtools::load_all(".")
# Simulate a sample
{
N <- 1000
d <- sample(c(-1, +1), 1 * N, replace = TRUE, prob = c(0.3, 0.7))
x <- sample(c(1L, 2L), 2 * N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 2)
gvec1 <- Xmat[, 1]
gvec2 <- Xmat[, 2]
# yvec <- 1.2 * d * (gvec1 == 1) * (gvec2 == 2) + rnorm(N) / 2
yvec <- rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat)
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like an inverted tan().
shift_plot(fit, group = 3) # this should be a straight line.
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like an inverted tan().
shift_plot(fit, group = 3) # this should be a straight line.
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like an inverted tan().
shift_plot(fit, group = 3) # this should be a straight line.
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like an inverted tan().
shift_plot(fit, group = 3) # this should be a straight line.
# Simulate a sample
{
N <- 1000
d <- sample(c(-1, +1), 1 * N, replace = TRUE, prob = c(0.3, 0.7))
x <- sample(c(1L, 2L), 2 * N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 2)
gvec1 <- Xmat[, 1]
gvec2 <- Xmat[, 2]
yvec <- 1.2 * d * (gvec1 == 1) * (gvec2 == 2) + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat)
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like an inverted tan().
shift_plot(fit, group = 3) # this should be a straight line.
devtools::load_all(".")
# Simulate a sample
{
N <- 1000
d <- sample(c(-1, +1), 1 * N, replace = TRUE, prob = c(0.3, 0.7))
x <- sample(c(1L, 2L), 2 * N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 2)
gvec1 <- Xmat[, 1]
gvec2 <- Xmat[, 2]
yvec <- 1.2 * d * (gvec1 == 1) * (gvec2 == 2) + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat)
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like an inverted tan().
shift_plot(fit, group = 3) # this should be a straight line.
devtools::load_all(".")
# Simulate a sample
{
N <- 1000
d <- sample(c(-1, +1), 1 * N, replace = TRUE, prob = c(0.3, 0.7))
x <- sample(c(1L, 2L), 2 * N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 2)
gvec1 <- Xmat[, 1]
gvec2 <- Xmat[, 2]
yvec <- 1.2 * d * (gvec1 == 1) * (gvec2 == 2) + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat)
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like an inverted tan().
shift_plot(fit, group = 3) # this should be a straight line.
shift_post(fit)
devtools::load_all(".")
devtools::load_all(".")
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like an inverted tan().
shift_plot(fit, group = 3) # this should be a straight line.
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like an inverted tan().
devtools::load_all(".")
# Simulate a sample
{
N <- 1000
d <- sample(c(-1, +1), 1 * N, replace = TRUE, prob = c(0.3, 0.7))
x <- sample(c(1L, 2L), 2 * N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 2)
gvec1 <- Xmat[, 1]
gvec2 <- Xmat[, 2]
yvec <- 1.2 * d * (gvec1 == 1) * (gvec2 == 2) + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat)
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like an inverted tan().
shift_plot(fit, group = 3) # this should be a straight line.
devtools::load_all(".")
# Simulate a sample
{
N <- 1000
d <- sample(c(-1, +1), 1 * N, replace = TRUE, prob = c(0.3, 0.7))
x <- sample(c(1L, 2L), 2 * N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 2)
gvec1 <- Xmat[, 1]
gvec2 <- Xmat[, 2]
yvec <- 1.2 * d * (gvec1 == 1) * (gvec2 == 2) + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat)
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like an inverted tan().
shift_plot(fit, group = 3) # this should be a straight line.
devtools::load_all(".")
# Simulate a sample
{
N <- 1000
d <- sample(c(-1, +1), 1 * N, replace = TRUE, prob = c(0.3, 0.7))
x <- sample(c(1L, 2L), 2 * N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 2)
gvec1 <- Xmat[, 1]
gvec2 <- Xmat[, 2]
yvec <- 1.2 * d * (gvec1 == 1) * (gvec2 == 2) + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat)
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like an inverted tan().
shift_plot(fit, group = 3) # this should be a straight line.
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like an inverted tan().
shift_plot(fit, group = 3) # this should be a straight line.
devtools::load_all(".")
# Simulate a sample
{
N <- 1000
d <- sample(c(-1, +1), 1 * N, replace = TRUE, prob = c(0.3, 0.7))
x <- sample(c(1L, 2L), 2 * N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 2)
gvec1 <- Xmat[, 1]
gvec2 <- Xmat[, 2]
yvec <- 1.2 * d * (gvec1 == 1) * (gvec2 == 2) + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat)
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like an inverted tan().
shift_plot(fit, group = 3) # this should be a straight line.
devtools::load_all(".")
# Simulate a sample
{
N <- 1000
d <- sample(c(-1, +1), 1 * N, replace = TRUE, prob = c(0.3, 0.7))
x <- sample(c(1L, 2L), 2 * N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 2)
gvec1 <- Xmat[, 1]
gvec2 <- Xmat[, 2]
yvec <- 1.2 * d * (gvec1 == 1) * (gvec2 == 2) + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat)
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like an inverted tan().
shift_plot(fit, group = 3) # this should be a straight line.
# Simulate a sample
{
N <- 1000
d <- sample(c(-1, +1), 1 * N, replace = TRUE, prob = c(0.3, 0.7))
x <- sample(c(1L, 2L), 2 * N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 2)
gvec1 <- Xmat[, 1]
gvec2 <- Xmat[, 2]
yvec <- 1.2 * d * (gvec1 == 1) * (gvec2 == 2) + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat)
devtools::load_all(".")
# Simulate a sample
{
>>>>>>> 8a7ba73647b853c14918b9a7c40ee3467ce3c6f3
N <- 1000
d <- sample(c(-1, +1), 1 * N, replace = TRUE, prob = c(0.3, 0.7))
x <- sample(c(1L, 2L), 2 * N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 2)
gvec1 <- Xmat[, 1]
gvec2 <- Xmat[, 2]
<<<<<<< HEAD
yvec <- (gvec1 == 1) * (gvec2 == 2) + rnorm(N) / 2
}
df <- data.frame(y = yvec, x1 = Xmat[, 1], x2 = Xmat[, 2])
lm(y ~ x1 * x2, df) |> summary()
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat, n = 100L)
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like a tan().
shift_plot(fit, group = 3) # this should be a straight line.
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like a tan().
devtools::load_all(".")
setup
setup()
=======
yvec <- 1.2 * d * (gvec1 == 1) * (gvec2 == 2) + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat)
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like an inverted tan().
shift_plot(fit, group = 3) # this should be a straight line.
>>>>>>> 8a7ba73647b853c14918b9a7c40ee3467ce3c6f3
# Simulate a sample
{
N <- 1000
d <- sample(c(-1, +1), 1 * N, replace = TRUE, prob = c(0.3, 0.7))
x <- sample(c(1L, 2L), 2 * N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 2)
gvec1 <- Xmat[, 1]
gvec2 <- Xmat[, 2]
<<<<<<< HEAD
yvec <- (gvec1 == 1) * (gvec2 == 2) + rnorm(N) / 2
}
df <- data.frame(y = yvec, x1 = Xmat[, 1], x2 = Xmat[, 2])
lm(y ~ x1 * x2, df) |> summary()
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat, n = 100L)
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like a tan().
shift_plot(fit, group = 3) # this should be a straight line.
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like a tan().
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat, n = 1000L)
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like a tan().
shift_plot(fit, group = 3) # this should be a straight line.
fit
fpost(fit)
f_post(fit)
=======
yvec <- 1.2 * d * (gvec1 == 1) * (gvec2 == 2) + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat)
devtools::load_all(".")
>>>>>>> 8a7ba73647b853c14918b9a7c40ee3467ce3c6f3
# Simulate a sample
{
N <- 1000
d <- sample(c(-1, +1), 1 * N, replace = TRUE, prob = c(0.3, 0.7))
<<<<<<< HEAD
x <- sample(c(1L, 2L, 3L), N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
yvec <- (x == 2) + rnorm(N) / 2
}
df <- data.frame(y = yvec, x1 = Xmat[, 1], x2 = Xmat[, 2])
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat, n = 1000L)
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like a tan().
shift_plot(fit, group = 3) # this should be a straight line.
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat, n = 100L)
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like a tan().
shift_plot(fit, group = 3) # this should be a straight line.
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like a tan().
shift_plot(fit, group = 3) # this should be a straight line.
devtools::load_all(".")
setup()
=======
x <- sample(c(1L, 2L), 2 * N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 2)
gvec1 <- Xmat[, 1]
gvec2 <- Xmat[, 2]
yvec <- 1.2 * d * (gvec1 == 1) * (gvec2 == 2) + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat)
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like an inverted tan().
shift_plot(fit, group = 3) # this should be a straight line.
devtools::load_all(".")
>>>>>>> 8a7ba73647b853c14918b9a7c40ee3467ce3c6f3
# Simulate a sample
{
N <- 1000
d <- sample(c(-1, +1), 1 * N, replace = TRUE, prob = c(0.3, 0.7))
<<<<<<< HEAD
x <- sample(c(1L, 2L, 3L), N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
yvec <- (x == 2) + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat, n = 100L)
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like a tan().
=======
x <- sample(c(1L, 2L), 2 * N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 2)
gvec1 <- Xmat[, 1]
gvec2 <- Xmat[, 2]
yvec <- 1.2 * d * (gvec1 == 1) * (gvec2 == 2) + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat)
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like an inverted tan().
shift_plot(fit, group = 3) # this should be a straight line.
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like an inverted tan().
shift_plot(fit, group = 3) # this should be a straight line.
devtools::load_all(".")
# Simulate a sample
{
N <- 1000
d <- sample(c(-1, +1), 1 * N, replace = TRUE, prob = c(0.3, 0.7))
x <- sample(c(1L, 2L), 2 * N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 2)
gvec1 <- Xmat[, 1]
gvec2 <- Xmat[, 2]
yvec <- 1.2 * d * (gvec1 == 1) * (gvec2 == 2) + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat)
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like an inverted tan().
shift_plot(fit, group = 3) # this should be a straight line.
devtools::load_all(".")
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like an inverted tan().
shift_plot(fit, group = 3) # this should be a straight line.
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like an inverted tan().
shift_plot(fit, group = 3) # this should be a straight line.
devtools::load_all(".")
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like an inverted tan().
>>>>>>> 8a7ba73647b853c14918b9a7c40ee3467ce3c6f3
shift_plot(fit, group = 3) # this should be a straight line.
# Simulate a sample
{
N <- 1000
<<<<<<< HEAD
x <- sample(c(1L, 2L), N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
yvec <-  1.2 * (x == 2L) + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat, n = 100L)
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like a tan().
# Simulate a sample
{
N <- 1000
x <- sample(c(1L, 2L), N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
yvec <-  1.2 * (x == 2L) * (2 * (rnorm(N) <= 0.7) - 1) + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat, n = 100L)
# Plot the shift function for the second cell
shift_plot(fit, group = 2)
# Simulate a sample
{
N <- 1000
d <- 2 * (rnorm(N) <= 0.7) - 1
x <- sample(0L:1L, N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
yvec <-  1.2 * (x == 2L) * d + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat, n = 100L)
# Plot the shift function for the second cell
shift_plot(fit, group = 2)
# Simulate a sample
{
N <- 1000
d <- 2 * (rnorm(N) <= 0.7) - 1
x <- sample(0L:1L, N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
yvec <-  1.2 * (x == 1L) * d + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat, n = 100L)
# Plot the shift function for the second cell
shift_plot(fit, group = 2)
# Simulate a sample
{
N <- 1000
d <- 2 * (rnorm(N) <= 0.7) - 1
x <- sample(0L:1L, N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
yvec <-  1.2 * (x == 1L) * d + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat, n = 100L)
devtools::load_all(".")
setup()
# Simulate a sample
{
N <- 1000
d <- 2 * (rnorm(N) <= 0.7) - 1
x <- sample(0L:1L, N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 1)
yvec <-  1.2 * (x == 1L) * d + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat, n = 100L)
# Plot the shift function for the second cell
shift_plot(fit, group = 2)
=======
d <- sample(c(-1, +1), 1 * N, replace = TRUE, prob = c(0.3, 0.7))
x <- sample(c(1L, 2L), 2 * N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 2)
gvec1 <- Xmat[, 1]
gvec2 <- Xmat[, 2]
yvec <- 1.2 * d * (gvec1 == 1) * (gvec2 == 2) + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat)
devtools::load_all(".")
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like an inverted tan().
# Simulate a sample
{
N <- 1000
d <- sample(c(-1, +1), 1 * N, replace = TRUE, prob = c(0.3, 0.7))
x <- sample(c(1L, 2L), 2 * N, replace = TRUE)
Xmat <- matrix(x, nrow = N, ncol = 2)
gvec1 <- Xmat[, 1]
gvec2 <- Xmat[, 2]
yvec <- 1.2 * d * (gvec1 == 1) * (gvec2 == 2) + rnorm(N) / 2
}
# Fit our ANOVA BNP model
fit <- anova_bnp_normal(yvec, Xmat)
# Plot the shift function for the second cell
shift_plot(fit, group = 2) # this should look like an inverted tan().
shift_plot(fit, group = 3) # this should be a straight line.
>>>>>>> 8a7ba73647b853c14918b9a7c40ee3467ce3c6f3
