for (i in 1:length(y)) {
# if (x[i] > 0) {
# f[i] <- phi * dpois(x[i] - 1, lambda) + (1 - phi) * dpois(x[i], lambda)
# } else {
# f[i] <- dpois(x[i], lambda)
# }
}
f
}
dberpo(1L, 0.5, 0.5)
if (x[i] > 0) {
# f[i] <- phi * dpois(x[i] - 1, lambda) + (1 - phi) * dpois(x[i], lambda)
# } else {
# f[i] <- dpois(x[i], lambda)
}
# Probability mass function Bernoulli Poisson distribution
dberpo <- function(x, phi, lambda) {
f <- x
for (i in 1:length(y)) {
if (x[i] > 0) {
# f[i] <- phi * dpois(x[i] - 1, lambda) + (1 - phi) * dpois(x[i], lambda)
# } else {
# f[i] <- dpois(x[i], lambda)
}
}
f
}
dberpo(1L, 0.5, 0.5)
# Probability mass function Bernoulli Poisson distribution
dberpo <- function(x, phi, lambda) {
f <- x
for (i in 1:length(y)) {
print(x[i])
# if (x[i] > 0) {
# f[i] <- phi * dpois(x[i] - 1, lambda) + (1 - phi) * dpois(x[i], lambda)
# } else {
# f[i] <- dpois(x[i], lambda)
# }
}
f
}
dberpo(1L, 0.5, 0.5)
# Probability mass function Bernoulli Poisson distribution
dberpo <- function(x, phi, lambda) {
f <- x
for (i in 1:length(x)) {
print(x[i])
# if (x[i] > 0) {
# f[i] <- phi * dpois(x[i] - 1, lambda) + (1 - phi) * dpois(x[i], lambda)
# } else {
# f[i] <- dpois(x[i], lambda)
# }
}
f
}
dberpo(1L, 0.5, 0.5)
library(ANOVABNPTestR)
library(dplyr)
library(ggplot2)
library(tidyr)
# Probability mass function Bernoulli Poisson distribution
dberpo <- function(x, phi, lambda) {
f <- x
for (i in 1:length(x)) {
if (x[i] > 0) {
f[i] <- phi * dpois(x[i] - 1, lambda) + (1 - phi) * dpois(x[i], lambda)
} else {
f[i] <- dpois(x[i], lambda)
}
}
f
}
dberpo(1L, 0.5, 0.5)
fit$f_post |>
dplyr::rename(fh = f) |>
dplyr::mutate(f0 = dberpo(y, phi, lambda)) #|>
library(ANOVABNPTestR)
library(dplyr)
library(ggplot2)
library(tidyr)
# Probability mass function Bernoulli Poisson distribution
dberpo <- function(x, phi, lambda) {
phi * dpois(x - 1, lambda) + (1 - phi) * dpois(x, lambda)
}
# Generates random draws from a Bernoulli Poisson distribution
rberpo <- function(n, phi, lambda) {
rpois(n, lambda) + rbinom(n, size = 1, prob = phi)
}
n <- 1000
phi <- 0.5
lambda <- 0.5
yvec <- rberpo(n, phi, lambda)
Xmat <- matrix(1L, n, 1)
hist(yvec)
fit$f_post |>
dplyr::rename(fh = f) |>
dplyr::mutate(f0 = dberpo(y, phi, lambda)) #|>
fit$f_post |>
dplyr::rename(fh = f) |>
dplyr::mutate(f0 = dberpo(y, phi, lambda)) |>
tidyr::pivot_longer(cols = fh:f0) |>
ggplot2::ggplot(
ggplot2::aes(x = y, color = name, y = value)
) +
ggplot2::geom_line()
library(ANOVABNPTestR)
library(dplyr)
library(ggplot2)
library(tidyr)
# Probability mass function Bernoulli Poisson distribution
dberpo <- function(x, phi, lambda) {
phi * dpois(x - 1, lambda) + (1 - phi) * dpois(x, lambda)
}
# Generates random draws from a Bernoulli Poisson distribution
rberpo <- function(n, phi, lambda) {
rpois(n, lambda) + rbinom(n, size = 1, prob = phi)
}
n <- 1000
phi <- 0.5
lambda <- 0.5
yvec <- rberpo(n, phi, lambda)
Xmat <- matrix(1L, n, 1)
hist(yvec)
fit <- anova_bnp_berpoi(yvec, Xmat, iter = 20000L, warmup = 10000L)
fit$f_post |>
dplyr::rename(fh = f) |>
dplyr::mutate(f0 = dberpo(y, phi, lambda)) |>
tidyr::pivot_longer(cols = fh:f0) |>
ggplot2::ggplot(
ggplot2::aes(x = y, color = name, y = value)
) +
ggplot2::geom_line()
n <- 1000
phi <- 0.2
lambda <- 0.5
yvec <- rberpo(n, phi, lambda)
Xmat <- matrix(1L, n, 1)
hist(yvec)
fit <- anova_bnp_berpoi(yvec, Xmat, iter = 20000L, warmup = 10000L)
fit$f_post |>
dplyr::rename(fh = f) |>
dplyr::mutate(f0 = dberpo(y, phi, lambda)) |>
tidyr::pivot_longer(cols = fh:f0) |>
ggplot2::ggplot(
ggplot2::aes(x = y, color = name, y = value)
) +
ggplot2::geom_line()
library(ANOVABNPTestR)
library(dplyr)
library(ggplot2)
library(tidyr)
# Probability mass function Bernoulli Poisson distribution
dberpo <- function(x, phi, lambda) {
phi * dpois(x - 1, lambda) + (1 - phi) * dpois(x, lambda)
}
library(ANOVABNPTestR)
library(dplyr)
library(ggplot2)
library(tidyr)
# Probability mass function Bernoulli Poisson distribution
dberpo <- function(x, phi, lambda) {
phi * dpois(x - 1, lambda) + (1 - phi) * dpois(x, lambda)
}
# Generates random draws from a Bernoulli Poisson distribution
rberpo <- function(n, phi, lambda) {
rpois(n, lambda) + rbinom(n, size = 1, prob = phi)
}
library(ANOVABNPTestR)
library(dplyr)
library(ggplot2)
library(tidyr)
# Probability mass function Bernoulli Poisson distribution
dberpo <- function(x, phi, lambda) {
phi * dpois(x - 1, lambda) + (1 - phi) * dpois(x, lambda)
}
# Generates random draws from a Bernoulli Poisson distribution
rberpo <- function(n, phi, lambda) {
rpois(n, lambda) + rbinom(n, size = 1, prob = phi)
}
n <- 1000
phi <- 0.2
lambda <- 0.5
yvec <- rberpo(n, phi, lambda)
Xmat <- matrix(1L, n, 1)
hist(yvec)
fit <- anova_bnp_berpoi(yvec, Xmat, iter = 20000L, warmup = 10000L)
devtools::load_all(".")
library(ANOVABNPTestR)
library(dplyr)
library(ggplot2)
library(tidyr)
# Probability mass function Bernoulli Poisson distribution
dberpo <- function(x, phi, lambda) {
phi * dpois(x - 1, lambda) + (1 - phi) * dpois(x, lambda)
}
# Generates random draws from a Bernoulli Poisson distribution
rberpo <- function(n, phi, lambda) {
rpois(n, lambda) + rbinom(n, size = 1, prob = phi)
}
n <- 1000
phi <- 0.2
lambda <- 0.5
yvec <- rberpo(n, phi, lambda)
Xmat <- matrix(1L, n, 1)
hist(yvec)
fit <- anova_bnp_berpoi(yvec, Xmat, iter = 20000L, warmup = 10000L)
fit$f_post |>
dplyr::rename(fh = f) |>
dplyr::mutate(f0 = dberpo(y, phi, lambda)) |>
tidyr::pivot_longer(cols = fh:f0) |>
ggplot2::ggplot(
ggplot2::aes(x = y, color = name, y = value)
) +
ggplot2::geom_line()
devtools::load_all(".")
library(ANOVABNPTestR)
library(dplyr)
library(ggplot2)
library(tidyr)
ANOVABNPTestR::setup()
options(download.file.method = "wininet")
ANOVABNPTestR::setup()
1+1
library(ANOVABNPTestR)
library(dplyr)
library(ggplot2)
library(tidyr)
options(download.file.method = "wininet")
ANOVABNPTestR::setup()
devtools::load_all(".")
library(ANOVABNPTestR)
library(dplyr)
library(ggplot2)
library(tidyr)
options(download.file.method = "wininet")
ANOVABNPTestR::setup()
devtools::load_all(".")
library(ANOVABNPTestR)
library(dplyr)
library(ggplot2)
library(tidyr)
ANOVABNPTestR::setup()
library(ANOVABNPTestR)
library(dplyr)
library(ggplot2)
library(tidyr)
devtools::load_all(".")
# Probability mass function Bernoulli Poisson distribution
dberpo <- function(x, phi, lambda) {
phi * dpois(x - 1, lambda) + (1 - phi) * dpois(x, lambda)
}
# Generates random draws from a Bernoulli Poisson distribution
rberpo <- function(n, phi, lambda) {
rpois(n, lambda) + rbinom(n, size = 1, prob = phi)
}
n <- 1000
phi <- 0.2
lambda <- 0.5
yvec <- rberpo(n, phi, lambda)
Xmat <- matrix(1L, n, 1)
hist(yvec)
fit <- anova_bnp_berpoi(yvec, Xmat, iter = 20000L, warmup = 10000L)
fit$f_post |>
dplyr::rename(fh = f) |>
dplyr::mutate(f0 = dberpo(y, phi, lambda)) |>
tidyr::pivot_longer(cols = fh:f0) |>
ggplot2::ggplot(
ggplot2::aes(x = y, color = name, y = value)
) +
ggplot2::geom_line()
n <- 1000
phi <- 0.8
lambda <- 0.5
yvec <- rberpo(n, phi, lambda)
Xmat <- matrix(1L, n, 1)
hist(yvec)
fit <- anova_bnp_berpoi(yvec, Xmat, iter = 20000L, warmup = 10000L)
fit$f_post |>
dplyr::rename(fh = f) |>
dplyr::mutate(f0 = dberpo(y, phi, lambda)) |>
tidyr::pivot_longer(cols = fh:f0) |>
ggplot2::ggplot(
ggplot2::aes(x = y, color = name, y = value)
) +
ggplot2::geom_line()
n <- 2000
phi <- 0.8
lambda <- 0.5
yvec <- rberpo(n, phi, lambda)
Xmat <- matrix(1L, n, 1)
hist(yvec)
fit <- anova_bnp_berpoi(yvec, Xmat, iter = 20000L, warmup = 10000L)
fit$f_post |>
dplyr::rename(fh = f) |>
dplyr::mutate(f0 = dberpo(y, phi, lambda)) |>
tidyr::pivot_longer(cols = fh:f0) |>
ggplot2::ggplot(
ggplot2::aes(x = y, color = name, y = value)
) +
ggplot2::geom_line()
n <- 10000
phi <- 0.8
lambda <- 0.5
yvec <- rberpo(n, phi, lambda)
Xmat <- matrix(1L, n, 1)
hist(yvec)
fit <- anova_bnp_berpoi(yvec, Xmat, iter = 20000L, warmup = 10000L)
fit$f_post |>
dplyr::rename(fh = f) |>
dplyr::mutate(f0 = dberpo(y, phi, lambda)) |>
tidyr::pivot_longer(cols = fh:f0) |>
ggplot2::ggplot(
ggplot2::aes(x = y, color = name, y = value)
) +
ggplot2::geom_line()
library(ANOVABNPTestR)
library(dplyr)
library(ggplot2)
library(tidyr)
# Probability mass function Bernoulli Poisson distribution
dberpo <- function(x, phi, lambda) {
phi * dpois(x - 1, lambda) + (1 - phi) * dpois(x, lambda)
}
# Generates random draws from a Bernoulli Poisson distribution
rberpo <- function(n, phi, lambda) {
rpois(n, lambda) + rbinom(n, size = 1, prob = phi)
}
n <- 10000
phi <- 0.8
lambda <- 0.5
yvec <- rberpo(n, phi, lambda)
Xmat <- matrix(1L, n, 1)
hist(yvec)
fit <-
anova_bnp_berpoi(
yvec,
Xmat,
iter = 2000L,
warmup = 1000L,
rho = 1.0,
a = 0.1,
b = 0.1,
a1 = mean(yvec),
b1 = 1,
alpha0 = 1.0,
beta0 = 1.0,
lb = 0,
ub = 10
)
fit <-
anova_bnp_berpoi(
yvec,
Xmat,
iter = 2000L,
warmup = 1000L,
rho = 1.0,
a = 0.1,
b = 0.1,
a1 = mean(yvec),
b1 = 1,
alpha0 = 1.0,
beta0 = 1.0,
)
n <- 10000
phi <- 0.8
lambda <- 0.5
yvec <- rberpo(n, phi, lambda)
Xmat <- matrix(1L, n, 1)
hist(yvec)
fit <-
anova_bnp_berpoi(
yvec,
Xmat,
iter = 2000L,
warmup = 1000L,
rho = 1.0,
a = 0.1,
b = 0.1,
a1 = numeric(mean(yvec)),
b1 = numeric(1),
alpha0 = 1.0,
beta0 = 1.0,
)
fit <-
anova_bnp_berpoi(
yvec,
Xmat,
iter = 2000L,
warmup = 1000L,
rho = 1.0,
a = 0.1,
b = 0.1,
a1 = numeric(mean(yvec)) + 1,
b1 = numeric(1),
alpha0 = 1.0,
beta0 = 1.0,
)
fit <-
anova_bnp_berpoi(
yvec,
Xmat,
iter = 2000L,
warmup = 1000L,
rho = 1.0,
a = 0.1,
b = 0.1,
a1 = numeric(mean(yvec)) + 1,
b1 = numeric(1),
alpha0 = 1.0,
beta0 = 1.0,
)
?anova_bnp_berpoi
fit <-
anova_bnp_berpoi(
yvec,
Xmat,
iter = 2000L,
warmup = 1000L,
rho = 1.0,
a = 1,
b = 1,
a1 = numeric(mean(yvec)) + 1,
b1 = numeric(1),
alpha0 = 1.0,
beta0 = 1.0,
)
fit <-
anova_bnp_berpoi(
yvec,
Xmat,
iter = 2000L,
warmup = 1000L,
rho = 1.0,
a = 1,
b = 1,
a1 = round(mean(yvec)) + 1,
b1 = 1L,
alpha0 = 1.0,
beta0 = 1.0,
)
fit <-
anova_bnp_berpoi(
yvec,
Xmat,
iter = 2000L,
warmup = 1000L,
rho = 1.0,
a = 1,
b = 1,
a1 = mean(yvec),
b1 = 1,
alpha0 = 1.0,
beta0 = 1.0,
)
fit <-
anova_bnp_berpoi(
yvec,
Xmat,
iter = 2000L,
warmup = 1000L,
rho = 1.0,
a = 1.0,
b = 1.0,
a1 = 1.0,
b1 = 1.0,
alpha0 = 1.0,
beta0 = 1.0,
)
fit$f_post |>
dplyr::rename(fh = f) |>
dplyr::mutate(f0 = dberpo(y, phi, lambda)) |>
tidyr::pivot_longer(cols = fh:f0) |>
ggplot2::ggplot(
ggplot2::aes(x = y, color = name, y = value)
) +
ggplot2::geom_line()
fit <-
anova_bnp_berpoi(
yvec,
Xmat,
iter = 2000L,
warmup = 1000L,
rho = 1.0,
a = 0.1,
b = 0.1,
a1 = 1.0,
b1 = 1.0,
alpha0 = 1.0,
beta0 = 1.0,
)
fit$f_post |>
dplyr::rename(fh = f) |>
dplyr::mutate(f0 = dberpo(y, phi, lambda)) |>
tidyr::pivot_longer(cols = fh:f0) |>
ggplot2::ggplot(
ggplot2::aes(x = y, color = name, y = value)
) +
ggplot2::geom_line()
fit <-
anova_bnp_berpoi(
yvec,
Xmat,
iter = 2000L,
warmup = 1000L,
rho = 1.0,
a = 0.1,
b = 0.1,
a1 = mean(yvec),
b1 = 1.0,
alpha0 = 1.0,
beta0 = 1.0,
)
